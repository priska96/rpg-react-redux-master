{"version":3,"sources":["battle/stylesBattle.module.css","stylesApp.module.css","battle/stylesPlayerSummary.module.css","battle/bar/stylesBar.module.css","battle/stylesBattleMenu.module.css","images/sky_background.png","battle/stylesBattleAnnouncer.module.css","images/heroes/jihoon_fight.png","images/heroes/jihoon_portrait.png","images/heroes/blue-dragon_fight.png","images/heroes/evil-king_fight.png","images/battle.mp3","images/battle2.mp3","images/message.mp4","tile-view/slices/characterSlice.js","game-ui/GameUI.js","tile-view/canvasContext.js","tile-view/constants.js","tile-view/slices/statusSlice.js","tile-view/slices/npcSlice.js","tile-view/slices/objectSlice.js","game-ui/slices/dialogSlice.js","tile-view/utils.js","tile-view/dialog_utils.js","tile-view/GameLoop.js","tile-view/action_utils.js","tile-view/Grid.js","tile-view/slices/mapImagesSlice.js","tile-view/ImagesBuffer.js","tile-view/Map.js","constants.js","tile-view/Character.js","tile-view/NPC.js","tile-view/ObjectNPC.js","tile-view/BackgroundView.js","tile-view/TileView.js","game-ui/SimpleDialog.js","battle/shared/helpers.js","battle/bar/Bar.js","battle/PlayerSummary.js","battle/hooks/useTypedMessage.js","battle/hooks/useBattleSequence.js","battle/BattleMenu.js","battle/BattleAnnouncer.js","battle/Battle.js","battle/hooks/useAIOpponent.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","directions","s","a","d","w","characterSlice","createSlice","name","initialState","x","y","step","dir","heroClass","heroImg","playerSummary","level","health","maxHealth","img","JihoonFight","magic","attack","defense","magicDefense","portrait","JihoonPortrait","inventory","reducers","move","state","action","payload","dirKey","bufferImage","addToInventory","console","log","push","item","updatePlayerPosition","updatePlayerSummary","actions","mapDispatch","connect","character","className","src","alt","map","idx","key","healing","onClick","newHealth","CanvasContext","React","createContext","MAP_DIMENSIONS","MAP_TILE_IMAGES","0","1","16","26","35","36","67","68","81","82","91","92","88","5","25","104","114","63","15","131","132","1331","1341","1441","1431","141","142","110","420","310","320","330","340","350","410","430","440","450","510","520","530","610","620","630","710","720","730","1760","1770","1780","1860","1870","1880","1510","1520","1530","1540","1550","1610","1620","1630","1640","1650","260","3500","4500","390","3100","490","4100","s22","s47","s34","s35","s36","s37","s38","s44","s45","s46","s48","s56","s57","s58","s11","s312","s322","s332","s31","s32","s33","s41","s43","s51","s52","s53","s61","s62","s63","s71","s72","s73","s67","s77","s121","s122","s123","s131","s132","s133","s141","s142","s143","s151","s152","s153","s161","s162","s163","LAYERS","forest","evilKing","sky","MOVE_DIRECTIONS","SOLID_TILES","statusSlice","mapLoaded","characterLoaded","npcLoaded","objectLoaded","mode","winner","selectedOpponentIdx","backgroundImg","backgroundImgLoaded","loadMap","loadCharacter","loadNPC","tmp","val","loadObject","onGameEnd","changeMap","bufferBackgroundImage","loadBackground","npcSlice","npcs","id","stopMoving","type","dead","npcSummary","main","BlueDragonFight","EvilKingFight","fireAction","updateNPC","forEach","index","objectSlice","objects","objectImg","tookItem","updateObject","dialogSlice","open","title","text","openerId","setContents","checkMapCollision","others","isMapEdge","currentMapLayers","layer","includes","isSolidTile","result","otherElem","othersIsOnMap","fullyGeared","dialogs","beforeFight","beforeGear","content","afterGear","afterFight","won","lost","goToSky","enterDungeon","leftDungeon","afterVictory","moveNPC","fireActionObject","npc","objectNPC","dialog","gameStatus","children","canvasRef","useRef","useState","ctx","setCtx","isVisible","setIsVisible","isUpdateRequired","setIsUpdateRequired","movesList","loopRef","width","height","moveCharacter","useCallback","e","preventDefault","finishAction","doAction","tick","current","requestAnimationFrame","useEffect","getContext","cancelAnimationFrame","moveNPC2","keyString","currentNPC","filter","getRandom","Math","floor","random","length","interval","setInterval","clearInterval","otherThingIdx","parseInt","split","setTimeout","undefined","battleEvilKind","gameOver","victory","leaveDungeon","gameWon","startsWith","prevTitle","otherThing","whoIsOnMap","document","addEventListener","removeEventListener","Provider","value","style","zIndex","ref","Grid","useContext","i","beginPath","moveTo","lineTo","stroke","closePath","j","mapImagesSlice","path","Object","keys","onLoad","COLS","ROWS","drawLayer","grid","querySelector","drawImage","NPC_IMAGE_SIZE","NPC_SPRITE","OBJECT_NPC_SPRITE","imgRef","currentMap","props","elem","currentImgSize","NPC","ObjectNPC","Sky","mapImagesLoaded","clearRect","GameUIDialog","styled","Dialog","fullWidth","DialogTitle","controls","DialogContentText","wait","ms","Promise","resolve","Bar","maxValue","label","styles","max","PlayerSummary","backgroundColor","info","BattleMenu","onAttack","onMagic","onHeal","option","BattleAnnouncer","typedMessage","message","setTypedMessage","visibleMessage","useTypedMessage","sequence","setSequence","turn","setTurn","inSequence","setInSequence","playerHealth","setPlayerHealth","opponentHealth","setOpponentHealth","announcerMessage","setAnnouncerMessage","playerAnimation","setPlayerAnimation","opponentAnimation","setOpponentAnimation","attacker","receiver","damage","h","recovered","heal","useBattleSequence","aiChoice","setAIChoice","options","useAIOpponent","mainContainer","loop","autoPlay","BattleMusic2","BattleMusic","gameHeader","opponent","summary","characters","gameImages","playerSprite","opponentSprite","user","hud","hudChild","currentMode","backgroundImage","gameOverContainer","startGameButtonContainer","startGameButton","Reward","Boolean","window","location","hostname","match","combineReducers","mapImagesReducer","statusReducer","characterReducer","npcReducer","objectReducer","dialogReducer","store","configureStore","reducer","rootReducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAErF,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GACnD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,GAC7D,CAAC,EAAG,EAAG,IAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,EAAG,EAAG,GAC5D,CAAC,EAAG,EAAG,IAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAClD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,KAAM,KAAM,KAAM,EAAG,KAAM,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnE,CAAC,EAAG,KAAM,KAAM,KAAM,EAAG,KAAM,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACjE,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,GACzD,CAAC,EAAG,IAAK,EAAG,EAAG,KAAM,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,EAAG,IAAK,KAC/D,CAAC,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,KAG3EC,IAAK,CACD,CACI,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzE,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAM,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxE,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAM,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxE,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC9G,CAAC,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5G,CAAC,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC7G,CAAC,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,MAAO,MAAM,MAAO,MAAM,OAC1G,CAAC,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC7G,CAAC,EAAG,MAAO,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5G,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrG,CAAC,EAAG,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAChG,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrG,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,MAAO,MAAO,MAAO,OACnG,CAAC,EAAG,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAEzG,CACI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,CAAC,EAAG,EAAG,EAAG,OAAQ,GAAI,EAAG,GAAI,EAAI,EAAI,EAAG,EAAG,EAAG,EAAG,EAAE,OAAQ,OAAQ,QACnE,CAAC,EAAG,EAAG,EAAG,EAAG,OAAQ,OAAQ,OAAO,OAAO,OAAQ,EAAG,EAAE,EAAG,EAAG,EAAE,OAAQ,OAAQ,QAChF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAE,EAAG,OAAQ,OAAQ,QAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAQ,OAAQ,QAC3D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAQ,OAAQ,QAC5D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAClD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IACnD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,OAKlDC,EAAkB,CAC3BnL,EAAG,CAAC,GAAI,GACRF,EAAG,EAAE,EAAG,GACRD,EAAG,CAAC,EAAG,GACPE,EAAG,CAAC,EAAG,IAGEqL,EAAc,CACvB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IACjH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAC1K,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,QCxQhJC,EAAcnL,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACVkL,WAAW,EACXC,iBAAiB,EACjBC,UAAW,EAAC,GAAO,GACnBC,aAAc,EAAC,GAAM,GAAM,GAAM,GACjCC,KAAM,QACNC,OAAQ,SACRC,oBAAqB,EACrB/I,IAAK,SACLgJ,cAAe,KACfC,qBAAqB,GAEzBtK,SAAU,CACNuK,QAAO,SAACrK,EAAOE,GACXF,EAAM4J,UAAY1J,GAEtBoK,cAAa,SAACtK,EAAOE,GACjBF,EAAM6J,gBAAkB3J,GAE5BqK,QAAO,SAACvK,EAAOC,GACX,IAAIuK,EAAG,YAAOxK,EAAM+J,cACpBS,EAAIvK,EAAOC,QAAQkB,KAAOnB,EAAOC,QAAQuK,IACzCzK,EAAM8J,UAAWU,GAErBE,WAAU,SAAC1K,EAAOC,GAEd,IAAIuK,EAAG,YAAOxK,EAAM+J,cACpBS,EAAIvK,EAAOC,QAAQkB,KAAOnB,EAAOC,QAAQuK,IACzCzK,EAAM+J,aAAcS,GAExBG,UAAS,SAAC3K,EAAOC,GACbD,EAAMgK,KAAO/J,EAAOC,QAAQ8J,KAC5BhK,EAAMiK,OAAShK,EAAOC,QAAQ+J,OAC9BjK,EAAMkK,oBAAsBjK,EAAOC,QAAQgK,qBAE/CU,UAAS,SAAC5K,EAAOC,GACbD,EAAMmB,IAAMlB,EAAOC,SAEvB2K,sBAAqB,SAAC7K,EAAOC,GACzBD,EAAMmK,cAAgBlK,EAAOC,SAEjC4K,eAAc,SAAC9K,EAAOE,GAClBF,EAAMoK,oBAAsBlK,MAKjC,EAAqHyJ,EAAY/I,QAAzHyJ,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeC,EAAO,EAAPA,QAASG,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAqB,EAArBA,sBAAuBC,EAAc,EAAdA,eAE1FnB,IAAmB,Q,kCCjD5BzL,EAAa,CACfC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAGDyM,EAAWvM,YAAY,CACzBC,KAAM,MACNC,aAAc,CACVsM,KAAM,CACF,CACIC,GAAI,QACJtM,EAAG,GACHC,EAAG,EACHC,KAAM,EACNC,IAAK,EACLC,UAAW,SACXC,QAAS,KACTkM,YAAY,EACZC,KAAM,MACNhK,IAAI,CAAC,SAAU,OACfiK,MAAM,EACNC,WAAY,CACRC,MAAM,EACN7M,KAAM,cACNY,IAAKkM,IACLrM,MAAO,EACPC,OAAQ,IACRC,UAAW,IAEXG,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,aAAc,KAGtB,CACIuL,GAAI,QACJtM,EAAG,EACHC,EAAG,EACHC,KAAM,EACNC,IAAK,EACLC,UAAW,WACXC,QAAS,KACTkM,YAAY,EACZC,KAAM,MACNhK,IAAI,CAAC,YACLiK,MAAM,EACNC,WAAY,CACRC,MAAM,EACN7M,KAAM,YACNY,IAAKmM,IACLtM,MAAO,GACPC,OAAQ,IACRC,UAAW,IACXG,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,aAAc,KAGtB,CACIuL,GAAI,QACJtM,EAAG,EACHC,EAAG,EACHC,KAAM,EACNC,IAAK,EACLC,UAAW,WACXC,QAAS,KACTkM,YAAY,EACZC,KAAM,MACNhK,IAAI,CAAC,YACLiK,MAAM,EACNC,WAAY,CACRC,MAAM,EACN7M,KAAM,MACNS,MAAO,EACPC,OAAQ,GACRC,UAAW,QAK3BU,SAAU,CACNC,KAAI,SAACC,EAAOC,GACR,kBAA4BA,EAAOC,QAAO,GAAnCvB,EAAC,KAAEC,EAAC,KAAEuB,EAAM,KAAEiB,EAAG,KACxBpB,EAAMgL,KAAK5J,GAAKzC,GAAKA,EACrBqB,EAAMgL,KAAK5J,GAAKxC,GAAKA,EACrBoB,EAAMgL,KAAK5J,GAAKvC,KAAOmB,EAAMgL,KAAK5J,GAAKvC,KAAO,EAAQmB,EAAMgL,KAAK5J,GAAKvC,KAAO,EAAI,EACjFmB,EAAMgL,KAAK5J,GAAKtC,IAAMZ,EAAWiC,IAErCC,YAAW,SAACJ,EAAOC,GACfD,EAAMgL,KAAK/K,EAAOC,QAAQkB,KAAKpC,QAAUiB,EAAOC,QAAQlB,SAE5DyM,WAAU,SAACzL,EAAOC,GACdD,EAAMgL,KAAK/K,EAAOC,QAAQkB,KAAK8J,YAAclL,EAAMgL,KAAK/K,EAAOC,QAAQkB,KAAK8J,YAEhFQ,UAAS,SAAC1L,EAAOC,GACbA,EAAOC,QAAQkB,IAAIuK,SAAQ,SAACC,GACxB5L,EAAMgL,KAAKY,GAAM,2BAAO5L,EAAMgL,KAAKY,IAAY3L,EAAOC,QAAQ,QAAD,OAAS0L,YAM/E,EAAmDb,EAASnK,QAArDb,EAAI,EAAJA,KAAMK,GAAW,EAAXA,YAAaqL,GAAU,EAAVA,WAAYC,GAAS,EAATA,UAE9BX,KAAgB,QC7GzBc,GAAcrN,YAAY,CAC5BC,KAAM,YACNC,aAAc,CACVoN,QAAS,CACL,CACIb,GAAI,WACJtM,EAAG,GACHC,EAAG,EACH6B,KAAM,QACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,UACN6K,UAAU,EACV1K,QAAS,GAEb,CACI2J,GAAI,WACJtM,EAAG,GACHC,EAAG,EACH6B,KAAM,QACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,UACN6K,UAAU,EACV1K,QAAS,GAEb,CACI2J,GAAI,WACJtM,EAAG,EACHC,EAAG,EACH6B,KAAM,SACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,UACN6K,UAAU,EACV1K,QAAS,IAEb,CACI2J,GAAI,WACJtM,EAAG,EACHC,EAAG,EACH6B,KAAM,OACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,UACN6K,UAAU,EACV1K,QAAS,IAEb,CACI2J,GAAI,WACJtM,EAAG,EACHC,EAAG,GACH6B,KAAM,QACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,UACN6K,UAAU,EACV1K,QAAS,GAGb,CACI2J,GAAI,WACJtM,EAAG,EACHC,EAAG,EACH6B,KAAM,cACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,YACN6K,UAAU,EACV1K,QAAS,GAEb,CACI2J,GAAI,WACJtM,EAAG,EACHC,EAAG,EACH6B,KAAM,iBACNsL,UAAW,KACXZ,KAAM,YACNhK,IAAK,CAAC,YACN6K,UAAU,EACV1K,QAAS,KAIrBxB,SAAU,CACN2L,WAAU,SAACzL,EAAOC,GACdD,EAAM8L,QAAQ7L,EAAOC,QAAQkB,KAAK4K,UAAW,GAGjD5L,YAAW,SAACJ,EAAOC,GACfD,EAAM8L,QAAQ7L,EAAOC,QAAQkB,KAAK2K,UAAY9L,EAAOC,QAAQ6L,WAEjEE,aAAY,SAACjM,EAAOC,GAChBA,EAAOC,QAAQkB,IAAIuK,SAAQ,SAACC,GACxB5L,EAAM8L,QAAQF,GAAM,2BAAO5L,EAAM8L,QAAQF,IAAY3L,EAAOC,QAAQ,QAAD,OAAS0L,YAMrF,GAAgDC,GAAYjL,QAArD6K,GAAU,GAAVA,WAAYrL,GAAW,GAAXA,YAAa6L,GAAY,GAAZA,aAExBJ,MAAmB,QCtG5BK,GAAc1N,YAAY,CAC5BC,KAAM,SACNC,aAAc,CACVyN,MAAM,EACNC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVrM,OAAQ,IAEZH,SAAU,CACNyM,YAAW,SAACvM,EAAOC,GAEfD,EAAMmM,KAAOlM,EAAOC,QAAQiM,KAC5BnM,EAAMoM,MAAQnM,EAAOC,QAAQkM,MAC7BpM,EAAMqM,KAAOpM,EAAOC,QAAQmM,KAC5BrM,EAAMsM,SAAWrM,EAAOC,QAAQoM,SAChCtM,EAAMC,OAASA,EAAOC,QAAQD,WAK3BsM,GAAgBL,GAAYtL,QAA5B2L,YAEAL,MAAmB,Q,SCuBrBM,GAAoB,SAAC7N,EAAGC,EAAG6N,EAAQtL,GAC5C,OArCqB,SAACxC,EAAGC,GAGzB,OAAQD,EAAI,GAAKA,GAFIiD,GAEShD,EAAI,GAAKA,GAFlBgD,EAoCd8K,CAAU/N,EAAEC,IAhDI,SAACD,EAAGC,EAAGuC,GAC9B,IACkC,EAD5BwL,EAAmBtD,EAAOlI,GAAK,eACnBwL,GAAgB,IAAlC,2BAAoC,CAAC,IAA5BC,EAAK,QACV,GAAIlD,EAAYmD,SAASD,EAAMhO,GAAGD,IAE9B,OAAO,GAEd,8BACD,OAAO,EAwCkBmO,CAAYnO,EAAEC,EAAGuC,IA/BjB,SAACxC,EAAEC,EAAE6N,GAC9B,IAAIM,GAAS,EAOb,OANAN,EAAOd,SAAQ,SAACqB,GACTA,EAAUrO,IAAMA,GAAKqO,EAAUpO,IAAKA,IACnCmO,GAAQ,MAITA,EAuB0CE,CAActO,EAAEC,EAAE6N,IAG1DS,GAAc,SAACrN,GACxB,IAAIkN,EAAS,EAMb,OALAlN,EAAU8L,SAAQ,SAAAlL,GACG,UAAdA,EAAKA,MAAgC,UAAdA,EAAKA,MAAgC,UAAdA,EAAKA,OAClDsM,GAAS,MAGVA,GC5DEI,GAAU,CACnB7D,OAAO,CACH,QAAQ,CACJ8D,YAAY,CACRC,WAAY,CACRC,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,mMAENC,SAAU,QACVrM,OAAQ,KAGhBsN,UAAW,CACPD,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,eACNC,SAAU,QACVrM,OAAQ,MAIpBuN,WAAY,CACRC,IAAK,CACDH,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,wIACNC,SAAU,QACVrM,OAAQ,KAGhByN,KAAM,CACFJ,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,8CACNC,SAAU,QACVrM,OAAQ,KAGhB0N,QAAS,CACLL,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,gHACNC,SAAU,QACVrM,OAAQ,iBAM5BuJ,IAAI,CACA,QAAQ,CACJoE,aAAc,CACVN,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,mGACNC,SAAU,QACVrM,OAAQ,kBAGhB4N,YAAY,CACRP,QAAS,CACLnB,MAAM,EACNC,MAAO,cACPC,KAAM,oDACNC,SAAU,QACVrM,OAAQ,eAKxBsJ,SAAS,CACL,QAAQ,CACJ6D,YAAY,CACRE,QAAU,CACNnB,MAAM,EACNC,MAAO,YACPC,KAAM,qFACNC,SAAU,QACVrM,OAAQ,qBAGhBuN,WAAW,CACPE,KAAK,CACDJ,QAAU,CACNnB,MAAM,EACNC,MAAO,YACPC,KAAM,4BACNC,SAAU,QACVrM,OAAQ,cAGhBwN,IAAK,CACDH,QAAU,CACNnB,MAAM,EACNC,MAAO,YACPC,KAAM,sBACNC,SAAU,QACVrM,OAAQ,aAIpB6N,aAAc,CACVR,QAAU,CACNnB,MAAM,EACNC,MAAO,YACPC,KAAM,QACNC,SAAU,QACVrM,OAAQ,MAIpB,QAAQ,CACJ6N,aAAc,CACVR,QAAU,CACNnB,MAAM,EACNC,MAAO,kBACPC,KAAM,6EACNC,SAAU,QACVrM,OAAQ,qBC/GtBY,GAAc,CAACd,OAAMgO,UAAS1N,iBAAgBoL,cAAYc,eAAayB,oBAAkBrD,YAAWC,YAAWc,aAAYhL,uBAAsBuL,iBAoPxInL,gBAnPS,SAAH,OAAKC,EAAS,EAATA,UAAWkN,EAAG,EAAHA,IAAKC,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAU,MAAO,CAACrN,YAAWkN,MAAKC,YAAWC,SAAQhN,IAAIiN,EAAWjN,IAAK8I,OAAQmE,EAAWnE,UAmPjHpJ,GAAzBC,EAjPE,SAAH,GAYW,IAXHuN,EAAQ,EAARA,SACAtN,EAAS,EAATA,UACAkN,EAAG,EAAHA,IACAlO,EAAI,EAAJA,KACAgO,EAAO,EAAPA,QACAG,EAAS,EAATA,UACAzC,EAAU,EAAVA,WACA0C,EAAM,EAANA,OACA5B,EAAW,EAAXA,YAAYpL,EAAG,EAAHA,IAAK8I,EAAM,EAANA,OACjB+D,EAAgB,EAAhBA,iBACA3N,EAAc,EAAdA,eAAgBsK,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWc,EAAS,EAATA,UAAWhL,EAAoB,EAApBA,qBAAsBuL,EAAY,EAAZA,aAEnFqC,EAAYC,iBAAO,MACzB,EAAsBC,mBAAS,MAAK,mBAA7BC,EAAG,KAAEC,EAAM,KAClB,EAAkCF,oBAAS,GAAK,mBAAzCG,EAAS,KAAEC,EAAY,KAC9B,EAAgDJ,oBAAS,GAAM,mBAAxDK,EAAgB,KAAEC,EAAmB,KACtCC,EAAY,CAAC,IAAK,IAAK,IAAK,KAC5BC,EAAUT,mBACVU,EPlCe,GOkCPrN,EACRsN,EPnCe,GOmCNtN,EAETuN,EAAgBC,uBAAY,SAACC,GAC/B,IAAMhO,EAAMgO,EAAEhO,IAGd,GADAgO,EAAEC,iBACE7F,EAAgBpI,GAAM,CACtB,kBAAeoI,EAAgBpI,GAAI,GAA5B1C,EAAC,KAAEC,EAAC,MAUO,IATA4N,GACdzL,EAAUpC,EAAIA,EACdoC,EAAUnC,EAAIA,EAAE,GAAD,mBAERqP,EAAIjD,MAAI,YACRkD,EAAUpC,UAEjB3K,KAGA2N,GAAoB,GACpB/O,EAAK,CAACpB,EAAGC,EAAGyC,KAGR,UAARA,IAEI8M,EAAOhC,KACPoD,IAEAC,KAGG,MAARnO,IACCuJ,EAAU,OACVc,EAAU,CAACtK,IAAI,CAAC,EAAE,GAAG,SAAS,CAAEzC,EAAE,EAAGC,EAAG,EAAGsM,YAAW,GAAM,SAAS,CAAEvM,EAAE,EAAGC,EAAG,SAEpF,CAACmB,EAAMgB,EAAUpC,EAAGoC,EAAUnC,EAAGmC,EAAUlC,KAAMkC,EAAUjC,IAAKqP,EAAOhC,OAEpEsD,EAAOL,uBAAY,WACjBP,IACAD,GAAa,GACbA,GAAa,GACbE,GAAoB,IAExBE,EAAQU,QAAUC,sBAAsBF,KACzC,CAACZ,EAAkBD,EAAcE,IAEpCc,qBAAU,WACNlB,EAAOJ,EAAUoB,QAAQG,WAAW,SACrC,CAACnB,IAEJkB,qBAAU,WAEN,OADAZ,EAAQU,QAAUC,sBAAsBF,GACjC,WACHT,EAAQU,SAAWI,qBAAqBd,EAAQU,YAErD,CAACV,EAASS,IAGb,IAAMM,EAAW,SAACC,EAAW5O,GACzB,IAAM6O,EAAahC,EAAIjD,KAAK5J,GAC5B,IAAI6O,EAAW/E,YACXzB,EAAgBuG,GAAY,CAC5B,kBAAevG,EAAgBuG,GAAU,GAAlCrR,EAAC,KAAEC,EAAC,MAYO,IAXA4N,GACdyD,EAAWtR,EAAIA,EACfsR,EAAWrR,EAAIA,EAAE,CAEbmC,GAAS,mBACNmN,EAAUpC,SAAO,YACjBmC,EAAIjD,KAAKkF,QAAO,SAAAjC,GAAG,OAAIA,IAAQgC,OAEtC9O,KAIA2N,GAAoB,GACpBf,EAAQ,CAACpP,EAAGC,EAAGoR,EAAW5O,OAKhC+O,EAAY,SAACpB,GACf,OAAOA,EAAUqB,KAAKC,MAAMD,KAAKE,SAAWvB,EAAUwB,UAG1DX,qBAAU,WACN,IAAMY,EAAWC,aAAY,WACzBV,EAASI,EAAUpB,GAAW,KAC/B,MACH,OAAO,kBAAM2B,cAAcF,MAC5B,CAACvC,EAAIjD,KAAK,GAAGrM,EAAGsP,EAAIjD,KAAK,GAAGpM,EAAGqP,EAAIjD,KAAK,GAAGE,aAE9C0E,qBAAU,WACN,GAAU,aAAPzO,EAAkB,CACjB,IAAMqP,EAAWC,aAAY,WACzBV,EAASI,EAAUpB,GAAY,KAChC,MACH,OAAO,kBAAM2B,cAAcF,OAEhC,CAACvC,EAAIjD,KAAK,GAAGrM,EAAGsP,EAAIjD,KAAK,GAAGpM,EAAGqP,EAAIjD,KAAK,GAAGE,WAAY/J,IAE1DyO,qBAAU,WACN,GAAS,aAANzO,EAAiB,CAChB,IAAMqP,EAAWC,aAAY,WACzBV,EAASI,EAAUpB,GAAY,KAChC,MACH,OAAO,kBAAM2B,cAAcF,OAEhC,CAACvC,EAAIjD,KAAK,GAAGrM,EAAGsP,EAAIjD,KAAK,GAAGpM,EAAGqP,EAAIjD,KAAK,GAAGE,WAAY/J,IAE1D,IAAMoO,EAAe,WACjBjP,QAAQC,IAAI,iBACZ,IAAM+L,EAAW6B,EAAO7B,SAClBqE,EAAgBC,SAAStE,EAASuE,MAAM,KAAK,IACnD,ICpJoB,SAACvE,EAAUqE,EAAe1Q,EAAQsM,EAAauC,EAAqBlE,EAAWlK,EAAsBgL,EAAWO,GACxI,MAAc,kBAAXhM,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrE6O,GAAoB,GACpBlE,EAAU,YACVqB,EAAa,CAAC7K,IAAI,CAAC,EAAE,GAAG,SAAS,CAAEzC,EAAE,EAAGC,EAAG,GAAG,SAAS,CAAED,EAAE,EAAGC,EAAG,MACjEkQ,GAAoB,GACpBpO,EAAqB,CAAC/B,EAAE,EAAGC,EAAG,EAAGC,KAAM,EAAGC,IAAK,IAC/C4M,EAAU,CAACtK,IAAI,CAAC,EAAE,GAAG,SAAS,CAAEzC,EAAE,EAAGC,EAAG,EAAGsM,YAAW,GAAM,SAAS,CAAEvM,EAAE,EAAGC,EAAG,MAC/EkQ,GAAoB,GACpBgC,YAAW,WACHvE,EAAYY,GAAQ5D,SAAS,SAAS6D,YAAYE,WACpD,MAEC,GDsIJM,CAAatB,EAAUqE,EAAexC,EAAOlO,OAAOsM,EAAauC,EAAqBlE,EAAWlK,EAAsBgL,EAAWO,KC/GtH,SAAChM,EAAQsM,EAAauC,EAAqBlE,EAAWlK,EAAsBgL,GAC/F,MAAc,cAAXzL,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrE6O,GAAoB,GACpBlE,EAAU,OACVkE,GAAoB,GACpBpO,EAAqB,CAAC/B,EAAE,EAAGC,EAAG,GAAIC,KAAM,EAAGC,IAAK,IAChD4M,EAAU,CAACtK,IAAI,CAAC,GAAG,SAAS,CAAEzC,EAAE,EAAGC,EAAG,GAAIC,KAAM,EAAGC,IAAK,EAAGoM,YAAW,KACtE4D,GAAoB,IACb,GDyGCnB,CAAQQ,EAAOlO,OAAOsM,EAAauC,EAAqBlE,EAAWlK,EAAsBgL,KCpG3E,SAACzL,EAAQ0Q,EAAepE,EAAa5B,GAC/D,MAAc,qBAAX1K,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrEK,QAAQC,IAAIoQ,GACZhG,EAAU,CAACX,KAAM,SAAUC,YAAQ8G,EAAW7G,oBAAqByG,KAC5D,GDkGCK,CAAe7C,EAAOlO,OAAQ0Q,EAAepE,EAAa5B,KC7FlD,SAAC1K,EAAQ0Q,EAAepE,EAAa5B,GACzD,MAAc,cAAX1K,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrEK,QAAQC,IAAIoQ,GACZhG,EAAU,CAACX,KAAM,YAAaC,OAAQ,YAAaC,oBAAqByG,KACjE,GD2FCM,CAAS9C,EAAOlO,OAAQ0Q,EAAepE,EAAa5B,KC9E7C,SAAC1K,EAAQ0Q,EAAepE,EAAauC,EAAqBd,EAAkBtC,GAC/F,MAAc,YAAXzL,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrE+N,EAAiB,CAAC5M,IAAK,IACvB4M,EAAiB,CAAC5M,IAAK,IACvB0N,GAAoB,GACpBpD,EAAU,CAACtK,IAAI,CAAC,EAAE,GAAI,SAAS,CAAEzC,EAAE,EAAGC,EAAG,GAAI,SAAS,CAACwM,MAAK,EAAMF,YAAY,KAC9E4D,GAAoB,IACb,GDyECoC,CAAQ/C,EAAOlO,OAAQ0Q,EAAepE,EAAauC,EAAqBd,EAAkBtC,KC7I9E,SAACY,EAAUqE,EAAe1Q,EAAQsM,EAAauC,EAAqBlE,EAAWlK,EAAsBgL,GAC7H,MAAc,kBAAXzL,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrE6O,GAAoB,GACpBlE,EAAU,OACVc,EAAU,CAACtK,IAAI,CAAC,GAAG,SAAS,CAAEzC,EAAE,EAAGC,EAAG,EAAGC,KAAM,EAAGC,IAAK,EAAGqC,IAAI,CAAC,MAAO,eACtE2N,GAAoB,GACpBpO,EAAqB,CAAC/B,EAAE,EAAGC,EAAG,EAAGC,KAAM,EAAGC,IAAK,IAC/CgQ,GAAoB,GACpBgC,YAAW,WACHvE,EAAYY,GAAQ3D,IAAI,SAASqE,YAAYP,WAC/C,MAEC,GDmIC6D,CAAa7E,EAAUqE,EAAexC,EAAOlO,OAAQsM,EAAauC,EAAqBlE,EAAWlK,EAAsBgL,KC7FjH,SAACzL,EAAQ0Q,EAAepE,EAAa5B,GACxD,MAAc,aAAX1K,IACCsM,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrEK,QAAQC,IAAIoQ,GACZhG,EAAU,CAACX,KAAM,WAAYC,OAAQ,SAAUC,oBAAqByG,KAC7D,GD2FCS,CAAQjD,EAAOlO,OAAQ0Q,EAAepE,EAAa5B,GAI3D,GAAI2B,EAAS+E,WAAW,SAAWpD,EAAIjD,KAAK2F,GAAezF,WACvDqB,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrEwL,EAAW,CAACrK,IAAKuP,SAEhB,GAAIrE,EAAS+E,WAAW,WAAY,CACrCvC,GAAoB,GACpB,IAAMwC,EAAYnD,EAAO/B,MAEzBG,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,KACrE+N,EAAiB,CAAC5M,IAAKuP,IACN,aAAbW,GAAyBjR,EAAe,CAACI,KAAMyN,EAAUpC,QAAQ6E,UAGrEpE,EAAY,CAACJ,MAAM,EAAOC,MAAO,GAAIC,KAAM,GAAIC,SAAU,GAAIrM,OAAQ,MAGvEuP,EAAW,WACblP,QAAQC,IAAI,UACF,QAAPY,GAAgC,IAAhBJ,EAAUpC,GAA2B,IAAhBoC,EAAUnC,GAC9C2N,EAAYY,GAAQ3D,IAAI,SAASoE,aAAaN,SAElD,IAAMiE,EFnKY,SAAC5S,EAAEC,EAAE6N,GAC3B,IAAIM,OAASgE,EAeb,OAbAtE,EAAOd,SAAQ,SAACqB,GACW,cAAnBA,EAAU7B,MAA2C,QAAnB6B,EAAU7B,OACxC6B,EAAUrO,IAAMA,GAAKqO,EAAUpO,IAAMA,EAAI,GAElCoO,EAAUrO,IAAMA,EAAI,GAAKqO,EAAUpO,IAAMA,GAEzCoO,EAAUrO,IAAMA,GAAKqO,EAAUpO,IAAMA,EAAI,GAEzCoO,EAAUrO,IAAMA,EAAI,GAAKqO,EAAUpO,IAAMA,KALhDmO,EAASC,MAUdD,EEmJgByE,CAAWzQ,EAAUpC,EAAGoC,EAAUnC,EAAE,GAAD,mBAAMqP,EAAIjD,MAAI,YAAKkD,EAAUpC,WAEnF,GADAxL,QAAQC,IAAIgR,GACPA,EAAL,CACA,GAAwB,QAApBA,EAAWpG,KAAgB,CAC3B,IAAMwF,EAAgBC,SAASW,EAAWtG,GAAG4F,MAAM,KAAK,IACxDpF,EAAW,CAACrK,IAAKuP,IACN,WAARxP,IAC0C,IAArC+L,GAAYnM,EAAUlB,iBACPkR,IAAX9G,GAAmC,gBAAXA,IACxBsC,EAAYY,GAAQ7D,OAAOiI,EAAWtG,IAAImC,YAAYG,UAAUD,SAChEwD,YAAW,WACPnG,EAAU,CAACX,KAAM,SAAUC,YAAQ8G,EAAW7G,oBAAqByG,MACjE,MAEK,WAAX1G,GACAsC,EAAYY,GAAQ7D,OAAOiI,EAAWtG,IAAIuC,WAAWG,QAAQL,UAGjEf,EAAYY,GAAQ7D,OAAOiI,EAAWtG,IAAImC,YAAYC,WAAWC,UAGhE,aAANnM,GACCoL,EAAYY,GAAQ5D,SAASgI,EAAWtG,IAAI6C,aAAaR,SAGzC,cAApBiE,EAAWpG,OACPoG,EAAWvF,SACXO,EAAY,CACRJ,MAAM,EACNC,MAAO,WACPC,KAAK,gCACLC,SAAUiF,EAAWtG,GACrBhL,OAAQ,KAGZsM,EAAY,CACRJ,MAAM,EACNC,MAAO,cACPC,KAAK,aAAD,OAAekF,EAAW9Q,KAAI,KAClC6L,SAAUiF,EAAWtG,GACrBhL,OAAQ,QAYxB,OAPA2P,qBAAU,WAEN,OADA6B,SAASC,iBAAiB,WAAYvC,GAC/B,WACHsC,SAASE,oBAAoB,WAAYxC,MAE9C,CAACA,IAGA,kBAAC,EAAcyC,SAAQ,CAACC,MAAOpD,GAC3B,4BAAQqD,MAAO,CAACC,OAAQ,GAChBC,IAAK1D,EACLW,MAAOA,EACPC,OAAQA,EACRjE,GAAI,iBAEX0D,GAAaN,MEhOX4D,GAxBF,SAAH,GAAmC,IAA9BhD,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQb,EAAQ,EAARA,SACpBI,EAAMyD,qBAAWzQ,GAoBvB,OAnBAmO,qBAAU,WACN,IAAI,IAAIuC,EAAI,EAAGA,EAAIjD,EAAQiD,IAAK,CAC5B,IAAMvT,ETPO,GSOHuT,EACV1D,EAAI2D,YACJ3D,EAAI4D,OAAO,EAAGzT,GACd6P,EAAI6D,OAAOrD,EAAOrQ,GAClB6P,EAAI8D,SACJ9D,EAAI+D,YAER,IAAI,IAAIC,EAAI,EAAGA,EAAIxD,EAAOwD,IAAK,CAC3B,IAAM9T,ETfO,GSeH8T,EACVhE,EAAI2D,YACJ3D,EAAI4D,OAAO1T,EAAG,GACd8P,EAAI6D,OAAO3T,EAAGuQ,GACdT,EAAI8D,SACJ9D,EAAI+D,eAET,CAAC/D,EAAKS,EAAQD,IAEVZ,GCxBLqE,GAAiBlU,YAAY,CAC/BC,KAAM,SACNC,aAAc,GACdoB,SAAU,CACNM,YAAW,SAACJ,EAAOC,GACf,IAAM0S,EAAO1S,EAAOC,QAChByS,IACA3S,EAAM2S,GAAQ,OAMfvS,GAAgBsS,GAAe9R,QAA/BR,YAEAsS,MAAsB,QCX/B7R,GAAc,CAAET,gBAsBPU,eAAQ,KAAMD,GAAdC,EApBM,SAAH,GAAyB,IAAnBV,EAAW,EAAXA,YACpB,OACI,yBAAKY,UAAU,iBAEX4R,OAAOC,KAAKhR,GAAiBV,KAAI,SAAAE,GAC7B,OACI,yBACIA,IAAG,uBAAkBA,GACrB4J,GAAE,uBAAkB5J,GACpBJ,IAAG,UAAKY,EAAgBR,IACxBH,IAAG,mBAAcG,GACjByR,OAAQ,WAAQ1S,EAAYyB,EAAgBR,cC+B9DR,GAAc,CAAEwJ,WACPvJ,gBAFS,SAACd,GAAK,MAAM,CAACmB,IAAKnB,EAAMoO,WAAWjN,OAEnBN,GAAzBC,EA3CH,SAAH,GAA0B,IAApBuJ,EAAO,EAAPA,QAASlJ,EAAG,EAAHA,IACdsN,EAAMyD,qBAAWzQ,GAChBsR,EAAcnR,EAARoR,EAAQpR,EAmCrB,OAjCAgO,qBAAU,WACNtP,QAAQC,IAAI,cACZ,IAAM0S,EAAY,SAAAC,GACd,IAAK,IAAIf,EAAI,EAAGA,EAAIa,EAAMb,IACtB,IAAK,IAAIM,EAAI,EAAGA,EAAIM,EAAMN,IAAK,CAC3B,IAAMhS,EAAOyS,EAAKf,GAAGM,GACrB,GAAKhS,EAAL,CAIA,IAAMpB,EAAMoS,SAAS0B,cAAc,iBAAD,OAAkB1S,IAC9C9B,EZrBD,GYqBK8T,EACJ7T,EZtBD,GYsBKuT,EACV1D,EAAI2E,UACA/T,EACA,EACA,EZ1BC,MY6BDV,EACAC,EZ9BC,UYsCjBqU,EAAU5J,EAAOlI,GAAK,IACtB8R,EAAU5J,EAAOlI,GAAK,IACtBkJ,GAAQ,KACT,CAAC0I,EAAMC,EAAMvE,EAAKpE,EAASlJ,IAEvB,QCxCEkS,GAAiB,CAAC,QAAQ,GAAI,QAAS,GAAI,QAAQ,GAAI,QAAQ,IAC/DC,GAAc,CACvB,QAAS,gCACT,QAAS,8BACT,QAAS,2BACT,QAAS,iCAGAC,GAAqB,CAC9B,WAAY,CAAC,oDAAoD,qDACjE,WAAY,CAAC,oDAAoD,qDACjE,WAAY,CAAC,qDAAqD,sDAClE,WAAY,CAAC,qDAAqD,sDAClE,WAAY,CAAC,oDAAoD,qDACjE,WAAY,CAAC,sCAAsC,uCACnD,WAAY,CAAC,sCAAsC,wCC8BjD1S,GAAc,CAACyJ,gBAAelK,eAErBU,gBAJS,SAACd,GAAK,sBAAUA,EAAMe,aAINF,GAAzBC,EA1CG,SAAH,GAA0F,IAArFnC,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAE,EAAD,EAAEC,YAAI,IAAC,IAAC,MAAEC,WAAG,IAAC,IAAC,EAAEC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASa,EAAS,EAATA,UAAWyK,EAAa,EAAbA,cAAelK,EAAW,EAAXA,YAC7EqO,EAAMyD,qBAAWzQ,GACjB+R,EAASjF,iBAAO,MAEhBlP,EAAiC,IAA3B6N,GAAYrN,GDbE,2BADM,iCCkChC,OAlBA+P,qBAAU,WAeN,OAdI5Q,IACAyP,EAAI2E,UACA3B,SAAS0B,cAAcnU,GDhBR,GCiBfH,EDjBe,GCkBfC,EDlBe,MbDN,GcsBTH,EdtBS,GcuBTC,EDtBe,OC0BnB0L,GAAc,IAEX,eACR,CAACmE,EAAK1P,EAAWC,EAASL,EAAGC,EAAGC,EAAMC,EAAKwL,EAAezK,IAGzD,yBACIoL,GAAG,YACH/J,IAAI,YACJ8Q,IAAKwB,EACLV,OACI,kBAAM1S,EAAY,IAAD,OAAKoT,EAAO9D,QAAQzE,MAEzCjK,UAAU,gBACVC,IAAK5B,OC8BXwB,GAAc,CAACT,eAAamK,WAEnBzJ,gBAJS,SAACd,GAAK,kCAAUA,EAAMiO,KAAG,IAAEwF,WAAYzT,EAAMoO,WAAWjN,QAIxCN,GAAzBC,EArBF,SAAC4S,GACV,OACI,oCACKA,EAAM1I,KAAK7J,KAAI,SAACwS,EAAMvS,GACnB,OAjDJ,SAAH,GAKgC,IAL3B6J,EAAE,EAAFA,GAAItM,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAC,IAAEC,YAAI,IAAC,IAAC,MAAEC,WAAG,IAAC,IAAC,EACpBE,EAAO,EAAPA,QACAoM,EAAI,EAAJA,KACAhK,EAAG,EAAHA,IACAmJ,EAAO,EAAPA,QAASnK,EAAW,EAAXA,YACTe,EAAG,EAAHA,IAAKsS,EAAU,EAAVA,WACZhF,EAAMyD,qBAAWzQ,GACjB+R,EAASjF,iBAAO,MAChBqF,EAAiBP,GAAepI,GAoBlC,OAlBJ2E,qBAAU,WAeN,OAdI5Q,GAAWmC,EAAI0L,SAAS4G,KACxBhF,EAAI2E,UACA3B,SAAS0B,cAAcnU,GACvBH,EAAM+U,EACN9U,EAAK8U,EACLA,EACAA,EfxBS,GeyBRjV,EfzBQ,Ge0BRC,EACDgV,EACAA,GAEJrJ,EAAQ,CAACnJ,IAAKA,EAAKqJ,KAAI,KAEpB,eACR,CAACgE,EAAKzP,EAASL,EAAGC,EAAGC,EAAMC,EAAKyL,EAASkJ,IAGpC,yBACIpS,IAAK4J,EACLA,GAAIA,EACJ/J,IAAI,MACJ8Q,IAAKwB,EACLV,OACI,WACI1S,EAAY,CAACgB,IAAKA,EAAKpC,QAAQ,IAAD,OAAMwU,EAAO9D,QAAQzE,OAG3DjK,UAAW,gBACXC,IAAMmK,EFrCQ,mCEqCFkI,GAAWrI,KAShB4I,CAAI,2BAEAF,GAAI,IACPvS,MACAqS,WAAYC,EAAMD,WAClBrT,YAAYsT,EAAMtT,YAClBmK,QAASmJ,EAAMnJ,kBCHjC1J,GAAc,CAAC6J,aAAYtK,gBAElBU,gBAJS,SAACd,GAAK,kCAAUA,EAAMkO,WAAS,IAAEuF,WAAYzT,EAAMoO,WAAWjN,QAI9CN,GAAzBC,EAdI,SAAC4S,GAChB,OACI,6BACKA,EAAM5H,QAAQ3K,KAAI,SAACwS,EAAMvS,GACvB,OA5CG,SAAH,GAAyF,IAApF6J,EAAE,EAAFA,GAAItM,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAGmN,EAAS,EAATA,UAAW5K,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAMsJ,EAAU,EAAVA,WAAYtK,EAAW,EAAXA,YAAa4L,EAAQ,EAARA,SAAUyH,EAAU,EAAVA,WAC7EhF,EAAMyD,qBAAWzQ,GACjB+R,EAASjF,iBAAO,MAoBtB,OAlBAqB,qBAAU,WAeN,OAdI7D,GAAa5K,EAAI0L,SAAS4G,KAC1BhF,EAAI2E,UACA3B,SAAS0B,cAAcpH,GACvB,EACA,EACA,GACA,GhBlBS,GgBmBTpN,EhBnBS,GgBoBTC,EACA,GACA,IAEJ8L,EAAW,CAACtJ,IAAKA,EAAKqJ,KAAI,KAEvB,eACR,CAACgE,EAAK/D,EAAYsB,EAAUyH,IAG3B,yBACIpS,IAAK4J,EACLA,GAAIA,EACJ/J,IAAI,YACJ8Q,IAAKwB,EACLV,OACI,WACI1S,EAAY,CAACgB,IAAKA,EAAK2K,UAAU,IAAD,OAAMyH,EAAO9D,QAAQzE,OAG7DjK,UAAU,gBACVC,IAAM+K,EAAuCuH,GAAkBtI,GAAI,GAAlDsI,GAAkBtI,GAAI,KAU7B6I,CAAU,2BAAIH,GAAI,IAAEvS,MAAKhB,YAAYsT,EAAMtT,YAAasK,WAAYgJ,EAAMhJ,WAAY+I,WAAYC,EAAMD,qB,oBCjBxH5S,GAAc,CAACgK,yBACN/J,gBAHS,SAACd,GAAK,MAAM,CAACmK,cAAenK,EAAMoO,WAAWjE,iBAG9BtJ,GAAxBC,EA/BQ,SAAH,GAAgD,IAA3CqJ,EAAa,EAAbA,cAAeU,EAAqB,EAArBA,sBAC9B4D,EAAMyD,qBAAWzQ,GACjB+R,EAASjF,iBAAO,MAUtB,OARAqB,qBAAU,WACNtP,QAAQC,IAAI,cACT4J,GACCsE,EAAI2E,UAAU3B,SAAS0B,cAAchJ,GAAgB,EAAG,GAE5DW,GAAe,KAChB,CAAC2D,EAAKtE,IAGL,yBACIc,GAAG,gBACHhK,IAAK8S,KACL7S,IAAI,aACJ8Q,IAAKwB,EACLxS,UAAU,gBACV8R,OACA,WACIjI,EAAsB,IAAD,OAAK2I,EAAO9D,QAAQzE,WCmB1CnK,gBAFS,SAAH,GAAgC,MAAO,CAACkT,gBAApB,EAAfA,gBAAoD5F,WAAzB,EAAVA,cAE5BtN,EAhCE,SAAH,GAAuC,IAAlCkT,EAAe,EAAfA,gBAAiB5F,EAAU,EAAVA,WAC1Ba,ElBbe,GkBaPrN,EACRsN,ElBde,GkBcNtN,EACT6M,EAAMyD,qBAAWzQ,GASvB,OAPAmO,qBAAU,WACN,OAAO,WACH,OAAO,WACHnB,GAAOA,EAAIwF,UAAU,EAAG,EAAGxF,EAAIQ,MAAOR,EAAIS,YAGnD,CAACT,EAAKL,EAAWjN,MAEhB,oCACI,kBAAC,GAAc,MACf,kBAAC,GAAY,MACZyR,OAAOC,KAAKmB,GAAiBzD,SAAWqC,OAAOC,KAAKhR,GAAiB0O,QAClE,oCACI,kBAAC,GAAI,CAACtB,MAAOA,EAAOC,OAAQA,GACxB,kBAAC,GAAG,QAIfd,EAAWxE,WAAa,kBAAC,GAAS,MAClCwE,EAAWxE,WAAa,kBAAC,GAAG,MAC5BwE,EAAWxE,WAAa,kBAAC,GAAS,U,4EChClCsK,GAAeC,aAAOC,KAAPD,CAAc,4QAoC1C,IAEerT,gBAFS,SAAH,GAAW,MAAO,CAACqN,OAAR,EAANA,UAEXrN,EAxBf,SAAsB,GAAW,IAAVqN,EAAM,EAANA,OACZhC,EAA4BgC,EAA5BhC,KAAMC,EAAsB+B,EAAtB/B,MAAOC,EAAe8B,EAAf9B,KAAKpM,EAAUkO,EAAVlO,OAazB,OACI,gBAACiU,GAAY,CAAE/H,KAAMA,EAAMkI,WAAS,GAChC,gBAACC,GAAA,EAAW,KAAElI,GAZL,UAAVnM,EACQ,yBAAOiP,OAAO,MAAMqF,UAAQ,GAC3B,0BAAQtT,IAAKoL,EAAMlB,KAAK,eAI5B,gBAACqJ,GAAA,EAAiB,KAAEnI,O,SC/BvBoI,GAAO,SAAAC,GAAE,OACpB,IAAIC,SAAQ,SAAAC,GACV9D,YAAW,WACT8D,MACCF,O,4DCDMG,GAAM,SAAH,OAAMhD,EAAK,EAALA,MAAOiD,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAAK,OACxC,yBAAK/T,UAAWgU,KAAO1J,MACnB,yBAAKtK,UAAWgU,KAAOD,OAAQA,GAC/B,yBAAK/T,UAAWgU,KAAOC,KACnB,yBACIjU,UAAWgU,KAAOnD,MAClBC,MAAO,CAAE7C,MAAM,GAAD,OAAM4C,EAAQiD,EAAY,IAAG,WCL9CI,GAAgB,SAAH,GACY,EAAJ5J,KADR,IAEQ7M,EAAI,EAAJA,KACAS,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAS,EAATA,UAAS,OAEvC,yBACI4B,UAAWgU,KAAO1J,KAClBwG,MAAO,CAACqD,gBAAwB,UAEhC,yBAAKnU,UAAWgU,KAAOI,MACnB,yBAAKpU,UAAWgU,KAAOvW,MAAOA,GAC9B,yBAAKuC,UAAWgU,KAAO9V,OAAO,OAAKA,IAGvC,yBAAK8B,UAAWgU,KAAO7V,QACnB,kBAAC,GAAG,CAAC4V,MAAM,KAAKlD,MAAO1S,EAAQ2V,SAAU1V,O,cCpBrD,mmGAAA+S,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQ,cCAA,26MAOO,I,oBCLMkD,GAAa,SAAH,OAAMC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAM,OAClD,yBAAKxU,UAAWgU,KAAO1J,MACnB,yBAAK/J,QAAS+T,EAAUtU,UAAWgU,KAAOS,QAAQ,UAGlD,yBAAKlU,QAASgU,EAASvU,UAAWgU,KAAOS,QAAQ,SAGjD,yBAAKlU,QAASiU,EAAQxU,UAAWgU,KAAOS,QAAQ,U,oBCP3CC,GAAkB,SAAH,GAAqB,IACzCC,EHFuB,SAAAC,GAC7B,MAAwCpH,mBAAS,IAAG,mBAA7CmH,EAAY,KAAEE,EAAe,KAoBpC,OAlBAjG,qBAAU,WAeR,OAdAiG,EAAgB,IAEZD,EAAQrF,QACV,wBAAC,uFACKuF,EAAiB,GACZ3D,EAAI,EAAE,KAAD,OAAEA,EAAIyD,EAAQrF,QAAM,iCAC1BkE,GAAK,IAAI,KAAD,EAEdqB,GAAkCF,EAAQzD,GAE1C0D,EAAgBC,GAAgB,OALE3D,IAAG,0DAFzC,GAWK,eACN,CAACyD,IAEGD,EGnBcI,CADkB,EAAPH,SAGhC,OACE,yBAAK5U,UAAWgU,KAAO1J,MACrB,yBAAKtK,UAAWgU,KAAOY,SAAUD,K,sDCRvC,mmGAAAxD,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAcA,IA8JMtR,GAAe,CAAC8J,YAAW4B,eAAa5L,uBAC/BG,gBAFS,SAACd,GAAK,MAAM,CAACe,UAAU,eAAIf,EAAMe,WAAYiK,KAAK,YAAIhL,EAAMiO,IAAIjD,MAAOd,oBAAqBlK,EAAMoO,WAAWlE,uBAE7FrJ,GAAzBC,EA/JA,SAAH,GAA6F,IAAxFC,EAAS,EAATA,UAAWiK,EAAI,EAAJA,KAAMd,EAAmB,EAAnBA,oBAAqBS,EAAS,EAATA,UAAW4B,EAAW,EAAXA,YAAa5L,EAAmB,EAAnBA,oBAE3E,EAAgC6N,mBAAS,IAAG,mBAArCwH,EAAQ,KAAEC,EAAW,KACrBhX,EAAiB8B,EAAjB9B,cACCoM,EAAcL,EAAKd,GAAnBmB,WAGR,EHd6B,SAAC2K,EAAU/W,EAAeoM,GACzD,MAAwBmD,mBAAS,GAAE,mBAA5B0H,EAAI,KAAEC,EAAO,KACpB,EAAoC3H,oBAAS,GAAM,mBAA5C4H,EAAU,KAAEC,EAAa,KAEhC,EAAwC7H,mBAASvP,EAAcG,WAAU,mBAAlEkX,EAAY,KAAEC,EAAe,KACpC,EAA4C/H,mBACxCnD,EAAWjM,WACd,mBAFMoX,EAAc,KAAEC,EAAiB,KAIxC,EAAgDjI,mBAAS,IAAG,mBAArDkI,EAAgB,KAAEC,EAAmB,KAE5C,EAA8CnI,mBAAS,UAAS,mBAAzDoI,EAAe,KAAEC,EAAkB,KAC1C,EAAkDrI,mBAAS,UAAS,mBAA7DsI,EAAiB,KAAEC,EAAoB,KAiJ9C,OA/IAnH,qBAAU,WACR,IAAQ5F,EAAegM,EAAfhM,KAAMkM,EAASF,EAATE,KAEd,GAAIlM,EAAM,CACR,IAAMgN,EAAoB,IAATd,EAAajX,EAAgBoM,EACxC4L,EAAoB,IAATf,EAAa7K,EAAapM,EAE3C,OAAQ+K,GACN,IAAK,SACH,IAAMkN,EJxBM,SAAH,GAAgC,IAA1BF,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAMjC,OAJED,EAASxX,OAA6C,MAAnCwX,EAAS9X,MAAQ+X,EAAS/X,OAEV+X,EAASxX,QAAU,EIoBjCD,CAAO,CAAEwX,WAAUC,aAElC,wBAAC,+EAE+D,OAD9DZ,GAAc,GACdM,EAAoB,GAAD,OAAIK,EAASvY,KAAI,2BAA0B,SACxDgW,GAAK,KAAM,KAAD,EAImB,OAF1B,IAATyB,EACIW,EAAmB,UACnBE,EAAqB,UAAU,SAC7BtC,GAAK,KAAK,KAAD,EAIoB,OAF1B,IAATyB,EACIW,EAAmB,UACnBE,EAAqB,UAAU,UAC7BtC,GAAK,KAAK,KAAD,GAIkB,OAFxB,IAATyB,EACIa,EAAqB,UACrBF,EAAmB,UAAU,UAC3BpC,GAAK,KAAK,KAAD,GAQ8C,OANpD,IAATyB,EACIa,EAAqB,UACrBF,EAAmB,UACvBF,EAAoB,GAAD,OAAIM,EAASxY,KAAI,gBAC3B,IAATyX,EACIO,GAAkB,SAAAU,GAAC,OAAKA,EAAID,EAAS,EAAIC,EAAID,EAAS,KACtDX,GAAgB,SAAAY,GAAC,OAAKA,EAAID,EAAS,EAAIC,EAAID,EAAS,KAAK,UACvDzC,GAAK,KAAM,KAAD,GAEyC,OAAzDkC,EAAoB,YAAD,OAAaM,EAASxY,KAAI,aAAY,UACnDgW,GAAK,MAAM,KAAD,GAEhB0B,EAAiB,IAATD,EAAa,EAAI,GACzBG,GAAc,GAAO,2CAjCvB,GAoCA,MAGF,IAAK,QACH,IAAMa,EJ1DK,SAAH,GAAgC,IAA1BF,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAMhC,OAJED,EAASzX,MAA4C,MAAnCyX,EAAS9X,MAAQ+X,EAAS/X,OAET+X,EAASvX,aAAe,EIsDtCH,CAAM,CAAEyX,WAAUC,aAEjC,wBAAC,+EAE2D,OAD1DZ,GAAc,GACdM,EAAoB,GAAD,OAAIK,EAASvY,KAAI,uBAAsB,SACpDgW,GAAK,KAAM,KAAD,EAIkB,OAFzB,IAATyB,EACIW,EAAmB,SACnBE,EAAqB,SAAS,SAC5BtC,GAAK,KAAM,KAAD,EAImB,OAF1B,IAATyB,EACIW,EAAmB,UACnBE,EAAqB,UAAU,UAC7BtC,GAAK,KAAK,KAAD,GAIkB,OAFxB,IAATyB,EACIa,EAAqB,UACrBF,EAAmB,UAAU,UAC3BpC,GAAK,KAAK,KAAD,GAU8C,OARpD,IAATyB,EACIa,EAAqB,UACrBF,EAAmB,UACvBF,EAAoB,GAAD,OACdM,EAASxY,KAAI,gCAET,IAATyX,EACIO,GAAkB,SAAAU,GAAC,OAAKA,EAAID,EAAS,EAAIC,EAAID,EAAS,KACtDX,GAAgB,SAAAY,GAAC,OAAKA,EAAID,EAAS,EAAIC,EAAID,EAAS,KAAK,UACvDzC,GAAK,MAAM,KAAD,GAEyC,OAAzDkC,EAAoB,YAAD,OAAaM,EAASxY,KAAI,aAAY,UACnDgW,GAAK,MAAM,KAAD,GAEhB0B,EAAiB,IAATD,EAAa,EAAI,GACzBG,GAAc,GAAO,2CAnCvB,GAsCA,MAGF,IAAK,OACH,IAAMe,EJ9FI,SAAH,GAAsB,IAAhBH,EAAQ,EAARA,SACrB,OAAOA,EAAS1X,MAAyB,IAAjB0X,EAAS/X,MI6FPmY,CAAK,CAAEJ,SAAUD,IAEnC,wBAAC,+EAE6D,OAD5DX,GAAc,GACdM,EAAoB,GAAD,OAAIK,EAASvY,KAAI,yBAAwB,SACtDgW,GAAK,KAAM,KAAD,EAIkB,OAFzB,IAATyB,EACIW,EAAmB,SACnBE,EAAqB,SAAS,SAC5BtC,GAAK,KAAM,KAAD,EAImB,OAF1B,IAATyB,EACIW,EAAmB,UACnBE,EAAqB,UAAU,UAC7BtC,GAAK,KAAK,KAAD,GAaR,OAXPkC,EAAoB,GAAD,OAAIK,EAASvY,KAAI,2BAC3B,IAATyX,EACIK,GAAgB,SAAAY,GAAC,OACfA,EAAIC,GAAaJ,EAAS5X,UACtB+X,EAAIC,EACJJ,EAAS5X,aAEfqX,GAAkB,SAAAU,GAAC,OACjBA,EAAIC,GAAaJ,EAAS5X,UACtB+X,EAAIC,EACJJ,EAAS5X,aACZ,UACDqV,GAAK,MAAM,KAAD,GAEyC,OAAzDkC,EAAoB,YAAD,OAAaM,EAASxY,KAAI,aAAY,UACnDgW,GAAK,MAAM,KAAD,GAEhB0B,EAAiB,IAATD,EAAa,EAAI,GACzBG,GAAc,GAAO,2CAjCvB,IA2CN,OAAM,eACL,CAACL,IAEG,CACLE,OACAE,aACAE,eACAE,iBACAI,kBACAE,oBACAJ,oBG9IIY,CAAkBtB,EAAU/W,EAAeoM,GAP3C6K,EAAI,EAAJA,KACAE,EAAU,EAAVA,WACAE,EAAY,EAAZA,aACAE,EAAc,EAAdA,eACAI,EAAe,EAAfA,gBACAE,EAAiB,EAAjBA,kBACAJ,EAAgB,EAAhBA,iBAGEa,EC9BmB,SAAArB,GAC3B,MAAgC1H,mBAAS,IAAG,mBAArC+I,EAAQ,KAAEC,EAAW,KAU5B,OARA5H,qBAAU,WACR,GAAa,IAATsG,EAAY,CACd,IAAMuB,EAAU,CAAC,SAAU,QAAS,QACpCD,EAAYC,EAAQrH,KAAKC,MAAMD,KAAKE,SAAWmH,EAAQlH,UAEzD,OAAM,eACL,CAAC2F,IAEGqB,EDmBYG,CAAcxB,GA4D/B,OA3DAtG,qBAAU,WAIN,OAHI2H,GAAqB,IAATrB,IAAeE,GAC3BH,EAAY,CAAEC,OAAMlM,KAAMuN,IAExB,WAAKtB,EAAY,OACxB,CAACC,EAAMqB,EAAUnB,IAEpBxG,qBAAU,WAiDN,OAhDqB,IAAjB0G,GAAyC,IAAnBE,IACtB,wBAAC,+FACS/B,GAAK,KAAM,KAAD,EAChB9J,EAA2B,IAAjB2L,EAAqB,CAACtM,KAAK,QAAUC,OAAQoB,EAAW5M,MAAQ,CAACuL,KAAK,QAAUC,OAAQhL,EAAcR,OAAO,0CAF3H,GAIsB,IAAnB+X,IACwB,gBAApBnL,EAAW5M,OACVkC,EAAoB,CAChBzB,MAAO,EACPC,OAAQmX,EACRlX,UAAW,IACXI,OAAQ,GACRD,MAAO,GACPE,QAAS,GACTC,aAAc,KAElBoR,YAAW,WACPvE,EAAYY,GAAQ7D,OAAO,SAASkE,WAAWC,IAAIH,WACjD,MAGa,cAApBjC,EAAW5M,OACVkC,EAAoB,CAChBzB,MAAO,GACPC,OAAQmX,EACRlX,UAAW,IACXI,OAAQ,IACRD,MAAO,GACPE,QAAS,GACTC,aAAc,KAElBoR,YAAW,WACPvE,EAAYY,GAAQ5D,SAAS,SAASiE,WAAWC,IAAIH,WACnD,OAIM,IAAjBgJ,IACwB,gBAApBjL,EAAW5M,KACV8N,EAAYY,GAAQ7D,OAAO,SAASkE,WAAWE,KAAKJ,SAE3B,cAApBjC,EAAW5M,MAChB8N,EAAYY,GAAQ5D,SAAS,SAASiE,WAAWE,KAAKJ,SAG1D3M,EAAoB,CAACxB,OAAQmX,MAG/B,WAAKL,EAAY,OACxB,CAACK,EAAcE,EAAgB7L,IAG9B,yBAAK3J,UAAWgU,KAAO2C,eACE,gBAApBtM,EAAW5M,KACR,2BAAOwM,GAAG,QAAQ2M,MAAI,EAACC,UAAQ,GAC3B,4BAAQ5W,IAAK6W,KAAc3M,KAAK,eAEpC,2BAAOF,GAAG,QAAQ2M,MAAI,EAACC,UAAQ,GAC3B,4BAAQ5W,IAAK8W,KAAa5M,KAAK,eAIvC,yBAAKnK,UAAWgU,KAAOgD,YAClB/Y,EAAcR,KAAK,OAAK4M,EAAW5M,MAExC,yBAAKuC,UAAWgU,KAAOiD,UACnB,yBAAKjX,UAAWgU,KAAOkD,SACnB,kBAAC,GAAa,CACV5M,MAAM,EACNnM,OAAQqX,EACR/X,KAAM4M,EAAW5M,KACjBS,MAAOmM,EAAWnM,MAClBE,UAAWiM,EAAWjM,cAKlC,yBAAK4B,UAAWgU,KAAOmD,YAEnB,yBAAKnX,UAAWgU,KAAOoD,YACnB,yBAAKpX,UAAWgU,KAAOqD,cACnB,yBACInX,IAAKjC,EAAcR,KACnBwC,IAAKhC,EAAcI,IACnB2B,UAAWgU,KAAO4B,MAG1B,yBAAK5V,UAAWgU,KAAOsD,gBACnB,yBACIpX,IAAKmK,EAAW5M,KAChBwC,IAAKoK,EAAWhM,IAChB2B,UAAWgU,KAAO8B,QAMlC,yBAAK9V,UAAWgU,KAAOuD,MACnB,yBAAKvX,UAAWgU,KAAOkD,SACnB,kBAAC,GAAa,CACV5M,MAAM,EACNnM,OAAQmX,EACR7X,KAAMQ,EAAcR,KACpBS,MAAOD,EAAcC,MACrBE,UAAWH,EAAcG,aAIjC,yBAAK4B,UAAWgU,KAAOwD,KACnB,yBAAKxX,UAAWgU,KAAOyD,UACnB,kBAAC,GAAe,CACZ7C,QACIc,GAAgB,oBAAiBzX,EAAcR,KAAI,YAI7D2X,GAAuB,IAATF,GACZ,yBAAKlV,UAAWgU,KAAOyD,UACnB,kBAAC,GAAU,CACPjD,OAAQ,kBAAMS,EAAY,CAAEjM,KAAM,OAAQkM,UAC1CX,QAAS,kBAAMU,EAAY,CAAEjM,KAAM,QAASkM,UAC5CZ,SAAU,kBAAMW,EAAY,CAAEjM,KAAM,SAAUkM,mB,oBE9E9E,IACMrV,GAAc,CAAC8J,YAAW4B,gBACjBzL,gBAFS,SAACd,GAAK,MAAM,CAACgK,KAAKhK,EAAMoO,WAAWpE,QAEnBnJ,GAAzBC,EAvEf,SAAa,GAAiC,IAAhCkJ,EAAI,EAAJA,KAAMW,EAAS,EAATA,UAAW4B,EAAW,EAAXA,YACrBmM,EAAc1O,EAEtB,OACE,oCACI,iCAEA,0BAAMhJ,UAAU,WACZ,kBAAC,GAAY,MACT,oCACI,kBAAC,EAAM,MACP,yBAAKiK,GAAG,QAAQ6G,MAAO,CAAC7C,MAAO,IAAKC,OAAQ,IAAKyJ,gBAAiB5E,OAClE,kBAAC,GAAQ,KACL,kBAAC,GAAQ,SAIJ,UAAhB2E,EACG,yBAAK1X,UAAWgU,KAAO4D,mBACnB,yBAAK5X,UAAWgU,KAAO/D,UAAU,kBACjC,yBAAKjQ,UAAWgU,KAAO6D,0BACnB,0BAAM7X,UAAWgU,KAAO8D,gBAClBvX,QAAS,WACLoJ,EAAU,CAACX,KAAM,QAASC,YAAQ8G,EAAW7G,oBAAqB,MAE3E,UAIL,6BAAK,gBACD,4BACI,4BAAI,OAAI,6BAAK,KAAQ,KAAC,6BAAK,KAAQ,KAAC,6BAAK,KAAQ,KAAC,6BAAK,KAAO,gBAC9D,4BAAI,OAAI,6BAAK,SAAW,QAAK,6BAAK,SAAW,uBAIxD,GAEY,WAAhBwO,EACD,kBAAC,GAAM,MACF,GAEY,cAAhBA,EACG,yBAAK1X,UAAWgU,KAAO4D,mBACnB,yBAAK5X,UAAWgU,KAAO/D,UAAU,cAEpC,GAEY,aAAhByH,EACG,yBAAK1X,UAAWgU,KAAO4D,mBACnB,yBAAK5X,UAAWgU,KAAO/D,UAAU,YAAS,6BAAK,0BAC/C,yBAAKjQ,UAAWgU,KAAO6D,0BACnB,0BAAM7X,UAAWgU,KAAO8D,gBAClBvX,QAAS,WACLgL,EAAY,CAACJ,MAAM,EAAMC,MAAO,oCAAqCC,KAAM0M,KAAQzM,SAAU,GAAIrM,OAAQ,YAElH,iBAKR,IAGT,qCCnEY+Y,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCVSC,gBAAgB,CAC3BrF,gBAAiBsF,GACjBlL,WAAYmL,EACZxY,UAAWyY,EACXvL,IAAKwL,GACLvL,UAAWwL,GACXvL,OAAQwL,KCJNC,GAAQC,YAAe,CAC3BC,QAASC,KAGXC,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,IAAQ,CAACN,MAAOA,IACf,kBAAC,GAAG,QAGRnI,SAAS0I,eAAe,SF+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLra,QAAQqa,MAAMA,EAAM/E,c","file":"static/js/main.662eb3b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"stylesBattle_mainContainer__2wigz\",\"user\":\"stylesBattle_user__10w-J\",\"opponent\":\"stylesBattle_opponent__3b7AA\",\"hud\":\"stylesBattle_hud__1OaKn\",\"hudChild\":\"stylesBattle_hudChild__3KHiW\",\"gameHeader\":\"stylesBattle_gameHeader__ILs9c\",\"summary\":\"stylesBattle_summary__A58qa\",\"characters\":\"stylesBattle_characters__9rd8M\",\"gameImages\":\"stylesBattle_gameImages__1yhx4\",\"static\":\"stylesBattle_static__dgLBk\",\"playerSprite\":\"stylesBattle_playerSprite__1ovRa\",\"attack\":\"stylesBattle_attack__1sPdy\",\"opponentSprite\":\"stylesBattle_opponentSprite__36uwj\",\"magic\":\"stylesBattle_magic__2lu-X\",\"shake\":\"stylesBattle_shake__10epJ\",\"damage\":\"stylesBattle_damage__1LUn0\",\"flash\":\"stylesBattle_flash__2PWTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOverContainer\":\"stylesApp_gameOverContainer__2Dzdi\",\"gameOver\":\"stylesApp_gameOver__1tNtA\",\"startGameButtonContainer\":\"stylesApp_startGameButtonContainer__2nK5N\",\"startGameButton\":\"stylesApp_startGameButton__bS8B_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"stylesPlayerSummary_main__2bL6u\",\"info\":\"stylesPlayerSummary_info__1V1ml\",\"name\":\"stylesPlayerSummary_name__z1Z-2\",\"level\":\"stylesPlayerSummary_level__1lLRh\",\"health\":\"stylesPlayerSummary_health__Egt6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"stylesBar_main__2yOKh\",\"label\":\"stylesBar_label__HzyDD\",\"max\":\"stylesBar_max__mw_FW\",\"value\":\"stylesBar_value__27_Q1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"stylesBattleMenu_main__1y8IQ\",\"option\":\"stylesBattleMenu_option__3f7G7\"};","module.exports = __webpack_public_path__ + \"static/media/sky_background.01c9cfab.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"stylesBattleAnnouncer_main__cViXV\",\"message\":\"stylesBattleAnnouncer_message__1pVgf\"};","module.exports = __webpack_public_path__ + \"static/media/jihoon_fight.4be66f58.png\";","module.exports = __webpack_public_path__ + \"static/media/jihoon_portrait.f0e390ff.png\";","module.exports = __webpack_public_path__ + \"static/media/blue-dragon_fight.e8fd23c4.png\";","module.exports = __webpack_public_path__ + \"static/media/evil-king_fight.d51a0382.png\";","module.exports = __webpack_public_path__ + \"static/media/battle.247af2d3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/battle2.3c164e83.mp3\";","module.exports = __webpack_public_path__ + \"static/media/message.5c58ce2c.mp4\";","import {createSlice} from '@reduxjs/toolkit';\nimport JihoonFight from \"./../../images/heroes/jihoon_fight.png\"\nimport JihoonPortrait from \"./../../images/heroes/jihoon_portrait.png\"\n\nconst directions = {\n    s: 0,\n    a: 1,\n    d: 2,\n    w: 3\n}\n\nconst characterSlice = createSlice({\n    name: 'character',\n    initialState: {\n        x: 7,\n        y: 7,//1,\n        step:0,\n        dir:0,\n        heroClass: 'SWORDSMAN',\n        heroImg: null,\n        playerSummary:{\n            level: 0,\n            health: 20,\n            maxHealth: 177,\n            name: 'Jihoon',\n            img: JihoonFight,\n\n            magic: 32,\n            attack: 50,\n            defense: 30,\n            magicDefense: 30,\n        },\n        portrait: JihoonPortrait,\n        inventory:[]\n    },\n    reducers: {\n        move(state, action) {\n            const [x, y, dirKey] = action.payload;\n            state.x+=x;\n            state.y+=y;\n            state.step=state.step < 3 - 1 ? state.step + 1 : 0;\n            state.dir=directions[dirKey];\n        },\n        bufferImage(state, action) {\n            state.heroImg = action.payload;\n        },\n        addToInventory(state, action){\n            //debugger\n            console.log('toinventar')\n            state.inventory.push(action.payload.item);\n        },\n        updatePlayerPosition(state, action) {\n            console.log(action.payload)\n            state.x = action.payload.x;\n            state.y = action.payload.y;\n            state.step = action.payload.step;\n            state.dir = action.payload.dir;\n        },\n\n        updatePlayerSummary(state, action) {\n            state.playerSummary = {...state.playerSummary, ...action.payload};\n        },\n    }\n});\n\nexport const { move, bufferImage, addToInventory, updatePlayerPosition, updatePlayerSummary } = characterSlice.actions;\n\nexport default characterSlice.reducer;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {updatePlayerSummary} from '../tile-view/slices/characterSlice'\n\nconst GameUI = ({character, updatePlayerSummary}) => {\n    const {heroClass, playerSummary, portrait, inventory} = character;\n\n    return (\n        <div className=\"game-ui\">\n            <div className=\"game-ui__avatar\" />\n            <img src={portrait} alt={`portrait_${playerSummary.name}`}/>\n            <div className=\"game-ui__info\">\n                <p>Name: {playerSummary.name}</p>\n                <p>Class: {heroClass}</p>\n                <p>Level: {playerSummary.level}</p>\n                <p>Health: {playerSummary.health}/ {playerSummary.maxHealth}</p>\n                <p className=\"game-ui__inventory\">Inventory:<br/>\n                    {inventory.map((item, idx)=>{\n                        return (\n                            <span key={idx}>\n                                <span className={item.healing>0?\"healingItem\":\"\"} onClick={()=> {\n                                    if(item.healing >0) {\n                                        const newHealth = playerSummary.health + item.healing > playerSummary.maxHealth?\n                                            playerSummary.maxHealth : playerSummary.health + item.healing\n                                        updatePlayerSummary({health: newHealth})\n                                    }}}\n                                >\n                                    {item.item}\n                                </span><br/>\n                            </span>\n                        )\n                    })}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({character}) => ({character: character});\nconst mapDispatch = {updatePlayerSummary}\nexport default connect(mapStateToProps, mapDispatch)(GameUI);\n","import React from 'react';\n\nconst CanvasContext = React.createContext(null);\n\nexport default CanvasContext;\n","import React from \"react\";\n\nexport const TILE_SIZE = 32;\n\n\nexport const MAP_DIMENSIONS = {\n    COLS: 17,\n    ROWS: 15,\n    TILE_SIZE,\n};\nexport const MAP_TILE_IMAGES = {\n    0: 'assets/map/PineTools.com_files/row-1-column-1.png', // transparent\n    1: 'assets/map/PineTools.com_files/row-1-column-2.png', // grass\n    16: 'assets/map/PineTools.com_files/row-1-column-6.png', // ground\n    26: 'assets/map/PineTools.com_files/row-2-column-6.png', // tree top\n    35: 'assets/map/PineTools.com_files/row-3-column-5.png', // tree row middle\n    36: 'assets/map/PineTools.com_files/row-3-column-6.png', // tree bottom\n    67: 'assets/map/PineTools.com_files/row-6-column-7.png', // small grass\n    68: 'assets/map/PineTools.com_files/row-6-column-8.png', // small grass 2\n    81: 'assets/map/PineTools.com_files/row-8-column-1.png', // big tree top left\n    82: 'assets/map/PineTools.com_files/row-8-column-2.png', // big tree top right\n    91: 'assets/map/PineTools.com_files/row-9-column-1.png', // big tree bottom left\n    92: 'assets/map/PineTools.com_files/row-9-column-2.png', // big tree bottom right\n    88: 'assets/map/PineTools.com_files/row-8-column-8.png', // yellow flower\n    5: 'assets/map/stone_2_brown1.png',\n    25: 'assets/map/PineTools.com_files/row-2-column-5.png', //bush\n    104: 'assets/map/PineTools.com_files/row-10-column-4.png', // cactus\n    114: 'assets/map/PineTools.com_files/row-11-column-4.png', // plant2\n    63: 'assets/map/PineTools.com_files/row-6-column-3.png', //pot broken\n    15: 'assets/map/PineTools.com_files/row-1-column-5.png', //water\n    131: 'assets/map/PineTools.com_files/row-13-column-1.png', //water left top corner\n    132: 'assets/map/PineTools.com_files/row-13-column-2.png', //water right top corner\n    1331: 'assets/map/PineTools.com_files/row-13-column-3-1.png', //water middle up\n    1341: 'assets/map/PineTools.com_files/row-13-column-4-1.png', //water middle right\n    1441: 'assets/map/PineTools.com_files/row-14-column-4-1.png', //water middle down\n    1431: 'assets/map/PineTools.com_files/row-14-column-3-1.png', //water middle left\n    141: 'assets/map/PineTools.com_files/row-14-column-1.png', //water left bottom corner\n    142: 'assets/map/PineTools.com_files/row-14-column-2.png', //water right bottom corner\n\n    // evilKing\n\n    110: 'assets/map/evil/row-1-column-1.png', //ground\n    420: 'assets/map/evil/row-4-column-2.png', //black\n    310: 'assets/map/evil/row-3-column-1.png', //wall bottom left\n    320: 'assets/map/evil/row-3-column-2.png', //wall bottom middle\n    330: 'assets/map/evil/row-3-column-3.png', //wall bottom right\n    340: 'assets/map/evil/row-3-column-4.png', //wall bottom right corner\n    350: 'assets/map/evil/row-3-column-5.png', //wall bottom left corner\n    410: 'assets/map/evil/row-4-column-1.png', //wall right middle\n    430: 'assets/map/evil/row-4-column-3.png', //wall left middle\n    440: 'assets/map/evil/row-4-column-4.png', //wall top right corner\n    450: 'assets/map/evil/row-4-column-5.png', //wall top left corner\n    510: 'assets/map/evil/row-5-column-1.png', //wall top left\n    520: 'assets/map/evil/row-5-column-2.png', //wall top middle\n    530: 'assets/map/evil/row-5-column-3.png', //wall top right\n    610: 'assets/map/evil/row-6-column-1.png', //wall wall left \n    620: 'assets/map/evil/row-6-column-2.png', //wall wall middle\n    630: 'assets/map/evil/row-6-column-3.png', //wall wall right \n    710: 'assets/map/evil/row-7-column-1.png', //wall wall bottom left \n    720: 'assets/map/evil/row-7-column-2.png', //wall wall bottom middle\n    730: 'assets/map/evil/row-7-column-3.png', //wall wall bottom right\n    1760: 'assets/map/evil/row-17-column-6.png', //thorne top left\n    1770: 'assets/map/evil/row-17-column-7.png', //throne top middle\n    1780: 'assets/map/evil/row-17-column-8.png', //throne top right\n    1860: 'assets/map/evil/row-18-column-6.png', //throne bottom left\n    1870: 'assets/map/evil/row-18-column-7.png', //throne bottom middle\n    1880: 'assets/map/evil/row-18-column-8.png', //throne bottom right\n\n    1510: 'assets/map/evil/row-15-column-1.png', //prison top left\n    1520: 'assets/map/evil/row-15-column-2.png', //prison top middle\n    1530: 'assets/map/evil/row-15-column-3.png', //prison top right\n    1540: 'assets/map/evil/row-15-column-4.png', //prison top door close\n    1550: 'assets/map/evil/row-15-column-5.png', //prison top door open\n    1610: 'assets/map/evil/row-16-column-1.png', //prison bottom left\n    1620: 'assets/map/evil/row-16-column-2.png', //prison bottom middle\n    1630: 'assets/map/evil/row-16-column-3.png', //prison bottom middle\n    1640: 'assets/map/evil/row-16-column-4.png', //prison bottom door close\n    1650: 'assets/map/evil/row-16-column-5.png', //prison bottom door open\n\n    260: 'assets/map/evilKing/row-2-column-6.png', //red flower\n    3500: 'assets/map/evilKing/row-3-column-5.png', //stones\n    4500: 'assets/map/evilKing/row-4-column-5.png', //bones\n    390: 'assets/map/evilKing/row-3-column-9.png', //dragon statue top left\n    3100: 'assets/map/evilKing/row-3-column-10.png', //dragon statue top right\n    490: 'assets/map/evilKing/row-4-column-9.png', //dragon statue bottom left\n    4100: 'assets/map/evilKing/row-4-column-10.png', //dragon statue bottom right\n\n    //sky\n    s22: 'assets/map/sky/row-2-column-2.png', //transparent no walk\n    s47: 'assets/map/sky/row-4-column-7.png', //cloud inner\n    s34: 'assets/map/sky/row-3-column-4.png', //cloud top left inner corner\n    s35: 'assets/map/sky/row-3-column-5.png', //cloud top right inner corner\n    s36: 'assets/map/sky/row-3-column-6.png', //cloud top left corner\n    s37: 'assets/map/sky/row-3-column-7.png', //cloud top middle\n    s38: 'assets/map/sky/row-3-column-8.png', //cloud top right corner\n    s44: 'assets/map/sky/row-4-column-4.png', //cloud bottom left inner corner\n    s45: 'assets/map/sky/row-4-column-5.png', //cloud bottom right inner corner\n    s46: 'assets/map/sky/row-4-column-6.png', //cloud left middle\n    s48: 'assets/map/sky/row-4-column-8.png', //cloud right middle\n    s56: 'assets/map/sky/row-5-column-6.png', //cloud bottom left corner\n    s57: 'assets/map/sky/row-5-column-7.png', //cloud bottom middle\n    s58: 'assets/map/sky/row-5-column-8.png', //cloud bottom right corner\n\n    s11: 'assets/map/sky/row-1-column-1.png', //grass\n    s312: 'assets/map/sky/row-3-column-1-2.png', //grass bottom right\n    s322: 'assets/map/sky/row-3-column-2-2.png', //grass bottom middle\n    s332: 'assets/map/sky/row-3-column-3-2.png', //grass bottom left\n    s31: 'assets/map/sky/row-3-column-1.png', //grass top left\n    s32: 'assets/map/sky/row-3-column-2.png', //grass top middle\n    s33: 'assets/map/sky/row-3-column-3.png', //grass top right\n    s41: 'assets/map/sky/row-4-column-1.png', //grass middle left\n    s43: 'assets/map/sky/row-4-column-3.png', //grass middle right\n    s51: 'assets/map/sky/row-5-column-1.png', //grass bottom left\n    s52: 'assets/map/sky/row-5-column-2.png', //grass bottom middle\n    s53: 'assets/map/sky/row-5-column-3.png', //grass bottom right\n    s61: 'assets/map/sky/row-6-column-1.png', //grass wall left\n    s62: 'assets/map/sky/row-6-column-2.png', //grass wall middle\n    s63: 'assets/map/sky/row-6-column-3.png', //grass wall right\n    s71: 'assets/map/sky/row-7-column-1.png', //grass wall bottom left\n    s72: 'assets/map/sky/row-7-column-2.png', //grass wall bottom middle\n    s73: 'assets/map/sky/row-7-column-3.png', //grass wall bottom right\n    s67: 'assets/map/sky/row-6-column-7.png', //grass wall door top\n    s77: 'assets/map/sky/row-7-column-7.png', //grass wall door bottom\n\n\n    s121: 'assets/map/sky/row-12-column-1.png', //castle top left corner\n    s122: 'assets/map/sky/row-12-column-2.png', //castle top middle\n    s123: 'assets/map/sky/row-12-column-3.png', //castle top right corner\n    s131: 'assets/map/sky/row-13-column-1.png', //castle middle left\n    s132: 'assets/map/sky/row-13-column-2.png', //castle middle middle\n    s133: 'assets/map/sky/row-13-column-3.png', //castle middle right\n    s141: 'assets/map/sky/row-14-column-1.png', //castle middle left\n    s142: 'assets/map/sky/row-14-column-2.png', //castle middle middle\n    s143: 'assets/map/sky/row-14-column-3.png', //castle middle right\n    s151: 'assets/map/sky/row-15-column-1.png', //castle middle left\n    s152: 'assets/map/sky/row-15-column-2.png', //castle middle middle\n    s153: 'assets/map/sky/row-15-column-3.png', //castle middle right\n    s161: 'assets/map/sky/row-16-column-1.png', //castle middle left\n    s162: 'assets/map/sky/row-16-column-2.png', //castle middle middle\n    s163: 'assets/map/sky/row-16-column-3.png', //castle middle right\n\n};\n\nexport const LAYERS = {\n    forest: [\n        [\n            [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 131, 132, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 131, 15, 1341, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 131, 15, 15, 1341, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 141, 15, 15, 15, 132, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 141, 15, 15, 15, 132, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 141, 1441, 1441, 142, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16],\n            [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16],\n\n        ],\n        [\n            [35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 35],\n            [35, 35, 35, 35, 35, 35, 67, 68, 1, 1, 1, 1, 1, 1, 88, 88, 35],\n            [35, 35, 36, 36, 36, 36, 68, 1, 1, 1, 1, 1, 1, 1, 88, 1, 35],\n            [35, 35, 1, 1, 104, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 35],\n            [35, 36, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 25, 1, 1, 1, 35],\n            [35, 1, 1, 1, 0, 0, 0, 1, 1, 1, 67, 68, 68, 1, 1, 1, 35],\n            [35, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 67, 1, 1, 1, 35],\n            [35, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 35],\n            [35, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 25, 25, 35],\n            [35, 1, 1, 63, 1, 0, 0, 0, 0, 1, 1, 1, 1, 67, 104, 1, 35],\n            [35, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 35],\n            [35, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 81, 82, 1, 35],\n            [35, 1, 1, 67, 25, 1, 1, 1, 1, 1, 1, 81, 82, 91, 92, 1, 35],\n            [35, 26, 1, 88, 25, 104, 26, 1, 1, 1, 67, 91, 92, 1, 1, 88, 35],\n            [35, 35, 26, 25, 68, 67, 35, 26, 26, 26, 26, 26, 26, 81, 82, 1, 35],\n        ]\n    ],\n    evilKing: [\n        [\n            [420, 420, 450, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 440,],\n            [420, 450, 530, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 410,],\n            [450, 530, 630, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 410,],\n            [430, 630, 730, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 730, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 410, 420, 350, 110, 110, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 410, 420, 420, 420, 430, 110, 110, 110, 110, 110, 410,],\n            [430, 110, 110, 110, 110, 110, 410, 420, 420, 420, 430, 110, 110, 110, 110, 110, 410,],\n            [350, 110, 110, 110, 110, 110, 110, 420, 420, 420, 430, 110, 110, 110, 110, 110, 110,],\n            [420, 350, 110, 110, 110, 110, 420, 420, 420, 420, 350, 110, 110, 110, 110, 420, 420,],\n        ],\n        [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 260, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 1760, 1770, 1780, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 1860, 1870, 1880, 0, 0, 4500, 0, 0, 0, 0,],\n            [0, 0, 390, 3100, 0, 0, 0, 0, 0, 0, 0, 0, 3500, 4500, 0, 0, 0,],\n            [0, 0, 490, 4100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 1510, 1520, 1520, 0, 1530, 310, 320, 330, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 1610, 1620, 1620, 0, 1630, 0, 0, 0, 320, 330, 0, 0, 0, 0, 0, 0,],\n            [0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 260, 0, 0, 0, 4500, 0, 0, 0, 0, 0, 3500, 0, 0, 0, 0, 0,],\n            [0, 330, 0, 0, 4500, 310, 340, 0, 0, 0, 0, 0, 0, 3500, 0, 310, 340,],\n            [0, 0, 320, 320, 320, 340, 0, 0, 0, 0, 0, 320, 320, 320, 320, 340, 0,],\n        ]\n    ],\n    sky: [\n        [\n            [0, 0, 0, 's41', 's11', 's11', 's11', 's43', 's63', 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 's51', 's52', 's52', 's52', 's53','s63', 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 's61', 's62', 's62', 's62', 's63','s63', 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 's61', 's62', 's62', 's62', 's63','s63', 's22', 's22', 's22', 's22', 0, 0, 0, 0,],\n            [0, 's22', 's36', 's61', 's62', 's62', 's62', 's63', 's63',  's22', 's22', 's22', 's22', 's22', 's22', 's22', 's22',],\n            [0, 's22', 's46', 's61', 's62', 's67', 's62', 's63', 's73', 's37', 's37','s37', 's38', 's22', 's22', 's22', 's22',],\n            [0, 's22', 's46', 's71', 's72', 's77', 's72', 's73', 's43', 's47', 's47', 's47', 's48', 's22', 's22', 's36', 's37',],\n            [0, 's22', 's46', 's47', 's11', 's11', 's11', 's11', 's11', 's47', 's47', 's45','s58', 's22','s36', 's47','s47',],\n            [0, 's22', 's46', 's47', 's47', 's47', 's47', 's47', 's47', 's47', 's47', 's48', 's22', 's36', 's47', 's47', 's47',],\n            [0, 's22', 's56', 's57', 's44','s47', 's47', 's47', 's47', 's47', 's45', 's58', 's22', 's46', 's47', 's47', 's47',],\n            [0, 0, 0, 's22', 's56', 's47', 's47', 's47', 's47', 's47', 's48', 's22', 's22', 's46', 's47', 's47', 's47',],\n            [0, 0, 0, 0, 's22', 's46', 's47', 's47','s47', 's47', 's48', 's22', 's22', 's46', 's47', 's47', 's47',],\n            [0, 0, 0, 's22', 's36', 's45', 's44', 's47', 's47', 's47', 's48', 's22', 's22', 's46', 's47', 's47', 's47',],\n            [0, 0, 0, 's22', 's56', 's58','s56', 's57', 's57', 's57', 's58', 's22', 's22','s46', 's47', 's47', 's47',],\n            [0, 0, 0, 's22', 's22', 's22', 's22', 's22', 's22', 's22', 's22', 's22', 's36', 's34', 's47', 's47', 's47',],\n        ],\n        [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 67, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0,],\n            [0, 0, 0, 's312', 88, 0, 67, 0 , 0,  0, 0, 0, 0, 0,'s121', 's122', 's123',],\n            [0, 0, 0, 0, 's312', 's322', 's322','s322','s332', 0, 0,0, 0, 0,'s131', 's132', 's133',],\n            [0, 0, 0, 0, 0, 67, 0, 67, 0, 0, 0, 0, 0,0, 's141', 's142', 's143',],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 's151', 's152', 's153'],\n            [0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 's161', 's162', 's163',],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 67, 67,],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 68, 68,],\n        ]\n    ]\n}\n\nexport const MOVE_DIRECTIONS = {\n    w: [0, -1],\n    a: [-1, 0],\n    s: [0, 1],\n    d: [1, 0],\n};\n\nexport const SOLID_TILES = [\n    15, 25, 26, 35, 36, 63, 104, 114, 81, 82, 91, 92, 88, 131, 132, 1311, 133, 1341, 134, 141, 142, 1431, 143, 1441, 144,\n    420, 310, 320, 330, 410, 430, 440, 510, 520, 530, 610, 620, 630, 1760, 1770, 1780, 1860, 1880, 1510, 1520, 1530, 1540, 1610, 1620, 1630, 1640, 260, 3500, 390, 3100, 490, 4100,\n    's22','s61','s62','s63','s71','s72','s73','s67','s121','s122','s123','s131','s132','s133','s141','s122','s123','s151','s152','s153','s161','s162','s163',\n];\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst statusSlice = createSlice({\n    name: 'gameStatus',\n    initialState: {\n        mapLoaded: false,\n        characterLoaded: false,\n        npcLoaded: [false, false],\n        objectLoaded: [false,false,false,false],\n        mode: 'start',\n        winner: 'Jihoon',\n        selectedOpponentIdx: 0,\n        map: 'forest',\n        backgroundImg: null,\n        backgroundImgLoaded: false,\n    },\n    reducers: {\n        loadMap(state, payload) {\n            state.mapLoaded = payload;\n        },\n        loadCharacter(state, payload) {\n            state.characterLoaded = payload;\n        },\n        loadNPC(state, action) {\n            let tmp =[ ...state.objectLoaded]\n            tmp[action.payload.idx] = action.payload.val\n            state.npcLoaded =tmp\n        },\n        loadObject(state, action) {\n            //debugger\n            let tmp =[ ...state.objectLoaded]\n            tmp[action.payload.idx] = action.payload.val\n            state.objectLoaded =tmp\n        },\n        onGameEnd(state, action){\n            state.mode = action.payload.mode;\n            state.winner = action.payload.winner;\n            state.selectedOpponentIdx = action.payload.selectedOpponentIdx;\n        },\n        changeMap(state, action){\n            state.map = action.payload;\n        },\n        bufferBackgroundImage(state, action){\n            state.backgroundImg = action.payload;\n        },\n        loadBackground(state, payload) {\n            state.backgroundImgLoaded = payload;\n        },\n    }\n});\n\nexport const { loadMap, loadCharacter, loadNPC, loadObject, onGameEnd, changeMap, bufferBackgroundImage, loadBackground } = statusSlice.actions;\n\nexport default statusSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\nimport BlueDragonFight from \"./../../images/heroes/blue-dragon_fight.png\"\nimport EvilKingFight from \"./../../images/heroes/evil-king_fight.png\"\n\nconst directions = {\n    s: 0,\n    a: 1,\n    d: 2,\n    w: 3\n}\n\nconst npcSlice = createSlice({\n    name: 'npc',\n    initialState: {\n        npcs: [\n            {\n                id: \"npc-0\",\n                x: 15,\n                y: 6,\n                step: 0,\n                dir: 0,\n                heroClass: 'DRAGON',\n                heroImg: null,\n                stopMoving: false,\n                type: 'npc',\n                map:['forest', 'sky'],\n                dead: false,\n                npcSummary: {\n                    main: false,\n                    name: 'Blue Dragon',\n                    img: BlueDragonFight,\n                    level: 2,\n                    health: 150,\n                    maxHealth: 150,\n\n                    magic: 42,\n                    attack: 70,\n                    defense: 30,\n                    magicDefense: 30,\n                }\n            },\n            {\n                id: \"npc-1\",\n                x: 0,//8,\n                y: 0,//3,\n                step: 0,\n                dir: 0,\n                heroClass: 'PUREEVIL',\n                heroImg: null,\n                stopMoving: false,\n                type: 'npc',\n                map:['evilKing'],\n                dead: false,\n                npcSummary: {\n                    main: false,\n                    name: 'Evil King',\n                    img: EvilKingFight,\n                    level: 10,\n                    health: 355,\n                    maxHealth: 355,\n                    magic: 70,\n                    attack: 65,\n                    defense: 40,\n                    magicDefense: 40,\n                }\n            },\n            {\n                id: \"npc-2\",\n                x: 0,//3,\n                y: 0,//13,\n                step: 0,\n                dir: 0,\n                heroClass: 'PRINCESS',\n                heroImg: null,\n                stopMoving: false,\n                type: 'npc',\n                map:['evilKing'],\n                dead: false,\n                npcSummary: {\n                    main: false,\n                    name: 'Pri',\n                    level: 2,\n                    health: 24,\n                    maxHealth: 244,\n                }\n            },\n        ]\n    },\n    reducers: {\n        move(state, action) {\n            const [x, y, dirKey, idx] = action.payload;\n            state.npcs[idx].x += x;\n            state.npcs[idx].y += y;\n            state.npcs[idx].step = state.npcs[idx].step < 3 - 1 ? state.npcs[idx].step + 1 : 0;\n            state.npcs[idx].dir = directions[dirKey];\n        },\n        bufferImage(state, action) {\n            state.npcs[action.payload.idx].heroImg = action.payload.heroImg;\n        },\n        fireAction(state, action) {\n            state.npcs[action.payload.idx].stopMoving = !state.npcs[action.payload.idx].stopMoving;\n        },\n        updateNPC(state, action) {\n            action.payload.idx.forEach((index)=>{\n                state.npcs[index] = {...state.npcs[index] , ...action.payload[`data-${index}`]}\n            })\n        }\n    }\n});\n\nexport const {move, bufferImage, fireAction, updateNPC} = npcSlice.actions;\n\nexport default npcSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\n\nconst objectSlice = createSlice({\n    name: 'objectNPC',\n    initialState: {\n        objects: [\n            {\n                id: \"object-0\",\n                x: 12,\n                y: 8,\n                item: 'Armor',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['forest'],\n                tookItem: false,\n                healing: 0\n            },\n            {\n                id: \"object-1\",\n                x: 15,\n                y: 2,\n                item: 'Boots',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['forest'],\n                tookItem: false,\n                healing: 0\n            },\n            {\n                id: \"object-2\",\n                x: 1,\n                y: 5,\n                item: 'Apples',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['forest'],\n                tookItem: false,\n                healing: 20\n            },\n            {\n                id: \"object-3\",\n                x: 2,\n                y: 3,\n                item: 'Fish',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['forest'],\n                tookItem: false,\n                healing: 30\n            },\n            {\n                id: \"object-4\",\n                x: 2,\n                y: 13,\n                item: 'Sword',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['forest'],\n                tookItem: false,\n                healing: 0\n            }\n            ,\n            {\n                id: \"object-5\",\n                x: 0,\n                y: 0,\n                item: 'doorOpenTop',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['evilKing'],\n                tookItem: false,\n                healing: 0\n            },\n            {\n                id: \"object-6\",\n                x: 0,\n                y: 0,\n                item: 'doorOpenBottom',\n                objectImg: null,\n                type: 'objectNPC',\n                map: ['evilKing'],\n                tookItem: false,\n                healing: 0\n            }\n        ]\n    },\n    reducers: {\n        fireAction(state, action) {\n            state.objects[action.payload.idx].tookItem = true;\n\n        },\n        bufferImage(state, action) {\n            state.objects[action.payload.idx].objectImg = action.payload.objectImg;\n        },\n        updateObject(state, action) {\n            action.payload.idx.forEach((index)=>{\n                state.objects[index] = {...state.objects[index] , ...action.payload[`data-${index}`]}\n            })\n        }\n    }\n});\n\nexport const {fireAction, bufferImage, updateObject} = objectSlice.actions;\n\nexport default objectSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\n\nconst dialogSlice = createSlice({\n    name: 'dialog',\n    initialState: {\n        open: false,\n        title: '',\n        text: '',\n        openerId: '',\n        action: ''\n    },\n    reducers: {\n        setContents(state, action) {\n            //console.log('setconents')\n            state.open = action.payload.open;\n            state.title = action.payload.title;\n            state.text = action.payload.text;\n            state.openerId = action.payload.openerId;\n            state.action = action.payload.action;\n        },\n    }\n});\n\nexport const { setContents } = dialogSlice.actions;\n\nexport default dialogSlice.reducer;","import {LAYERS, MAP_DIMENSIONS, SOLID_TILES} from './constants';\n\nexport const isSolidTile = (x, y, map) => {\n    const currentMapLayers = LAYERS[map];\n    for (let layer of currentMapLayers) {\n        if (SOLID_TILES.includes(layer[y][x])) {\n            // console.log('isSolidTile', true)\n            return true;\n        }\n    }\n    return false;\n};\n\nexport const isMapEdge = (x, y) => {\n    const {ROWS, COLS} = MAP_DIMENSIONS;\n    // console.log('isMapEdge', (x < 0 || x >= COLS || y < 0 || y >= ROWS)  )\n    return (x < 0 || x >= COLS || y < 0 || y >= ROWS)        \n};\n\nexport const othersIsOnMap = (x,y,others) => {\n    let result = false;\n    others.forEach((otherElem)=>{\n        if(otherElem.x === x && otherElem.y ===y){\n            result= true\n        }\n    })\n    //console.log('othersIsOnMap', result)\n    return result\n};\n\nexport const whoIsOnMap = (x,y,others) => {\n    let result = undefined;\n    //debugger\n    others.forEach((otherElem)=>{\n        if((otherElem.type === 'objectNPC')|| otherElem.type === 'npc') {\n            if (otherElem.x === x && otherElem.y === y - 1) {\n                result = otherElem\n            } else if (otherElem.x === x - 1 && otherElem.y === y) {\n                result = otherElem\n            } else if (otherElem.x === x && otherElem.y === y + 1) {\n                result = otherElem\n            } else if (otherElem.x === x + 1 && otherElem.y === y) {\n                result = otherElem\n            }\n        }\n    })\n    return result\n};\n\nexport const checkMapCollision = (x, y, others, map) => {\n    return isMapEdge(x,y) || isSolidTile(x,y, map) ||othersIsOnMap(x,y,others);\n};\n\nexport const fullyGeared = (inventory) =>{\n    let result = 0\n    inventory.forEach(item =>{\n        if(item.item === 'Armor'||item.item === 'Boots'||item.item === 'Sword'){\n            result +=1\n        }\n    })\n    return result\n}\n","export const dialogs = {\n    forest:{\n        \"npc-0\":{\n            beforeFight:{\n                beforeGear: {\n                    content: {\n                        open: true,\n                        title: \"Blue Dragon\",\n                        text: \"Hi, oh mighty hero! Help us free our land and rescue princess Pri~~\\n \" +\n                            \"But fist you should find some armor and practice the sword fighting. \\nCome back when you found your gear so we can train!\",\n                        openerId: \"npc-0\",\n                        action: ''\n                    }\n                },\n                afterGear: {\n                    content: {\n                        open: true,\n                        title: \"Blue Dragon\",\n                        text: \"Let's train!\",\n                        openerId: \"npc-0\",\n                        action: ''\n                    }\n                },\n            },\n            afterFight: {\n                won: {\n                    content: {\n                        open: true,\n                        title: 'Blue Dragon',\n                        text: 'You are a true swordsman! I believe you are ready to fight the evil King and rescue the princess! Let me know when you want to leave.',\n                        openerId: 'npc-0',\n                        action: ''\n                    }\n                },\n                lost: {\n                    content: {\n                        open: true,\n                        title: 'Blue Dragon',\n                        text: \"Let's try another round when you are ready!\",\n                        openerId: 'npc-0',\n                        action: ''\n                    }\n                },\n                goToSky: {\n                    content: {\n                        open: true,\n                        title: 'Blue Dragon',\n                        text: 'You are ready? Great! The Evil King holds the princess capture in the sky dungeon. I will bring us there now.',\n                        openerId: 'npc-0',\n                        action: 'go-to-sky'\n                    }\n                },\n            }\n        }\n    },\n    sky:{\n        \"npc-0\":{\n            enterDungeon: {\n                content: {\n                    open: true,\n                    title: \"Blue Dragon\",\n                    text: \"Are you ready to enter the dungeon?\\n Then go and rescue the princess! I will wait here for you.\",\n                    openerId: 'npc-0',\n                    action: 'enter-dungeon'\n                }\n            },\n            leftDungeon:{\n                content: {\n                    open: true,\n                    title: \"Blue Dragon\",\n                    text: \"Hero Jihoon you did it!! Thank you for saving us!\",\n                    openerId: 'npc-0',\n                    action: 'game-won'\n                }\n            }\n        }\n    },\n    evilKing:{\n        \"npc-1\":{\n            beforeFight:{\n                content:  {\n                    open: true,\n                    title: \"Evil King\",\n                    text: \"Who dares to enter my dungeon!? You weakling! Come here I will teach you a lesson!\",\n                    openerId: \"npc-1\",\n                    action: 'battle-evil-king'\n                }\n            },\n            afterFight:{\n                lost:{\n                    content:  {\n                        open: true,\n                        title: \"Evil King\",\n                        text: \"That was really too easy!\",\n                        openerId: \"npc-1\",\n                        action: 'game-over'\n                    }\n                },\n                won: {\n                    content:  {\n                        open: true,\n                        title: \"Evil King\",\n                        text: \"That's impossible!!\",\n                        openerId: \"npc-1\",\n                        action: 'victory'\n                    }\n                }\n            },\n            afterVictory: {\n                content:  {\n                    open: true,\n                    title: \"Evil King\",\n                    text: \".....\",\n                    openerId: \"npc-1\",\n                    action: ''\n                }\n            }\n        },\n        \"npc-2\":{\n            afterVictory: {\n                content:  {\n                    open: true,\n                    title: \"Princess Priska\",\n                    text: \"Thank you my hero for defeating the Evil King. Now let's get out of here!~\",\n                    openerId: \"npc-2\",\n                    action: 'leave-dungeon'\n                }\n            }\n        }\n    }\n}\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport CanvasContext from './canvasContext';\nimport {MAP_DIMENSIONS, TILE_SIZE, MOVE_DIRECTIONS} from './constants';\nimport {onGameEnd, changeMap} from './slices/statusSlice'\nimport {addToInventory, move, updatePlayerPosition} from './slices/characterSlice'\nimport {move as moveNPC, fireAction, updateNPC,} from './slices/npcSlice'\nimport {fireAction as fireActionObject, updateObject} from './slices/objectSlice'\nimport {setContents} from '../game-ui/slices/dialogSlice'\nimport {checkMapCollision, fullyGeared, whoIsOnMap} from './utils';\nimport {dialogs} from \"./dialog_utils\";\nimport {battleEvilKind, enterDungeon, gameOver, gameWon, goToSky, leaveDungeon, victory} from \"./action_utils\";\n\nconst mapDispatch = {move, moveNPC, addToInventory, fireAction, setContents, fireActionObject, onGameEnd, changeMap, updateNPC , updatePlayerPosition, updateObject };\nconst mapStateToProps = ({character, npc, objectNPC, dialog, gameStatus}) => ({character, npc, objectNPC, dialog, map:gameStatus.map, winner: gameStatus.winner});\n\nconst GameLoop = ({\n                      children,\n                      character,\n                      npc,\n                      move,\n                      moveNPC,\n                      objectNPC,\n                      fireAction,\n                      dialog,\n                      setContents,map, winner,\n                      fireActionObject,\n                      addToInventory, onGameEnd, changeMap, updateNPC, updatePlayerPosition, updateObject\n                  }) => {\n    const canvasRef = useRef(null);\n    const [ctx, setCtx] = useState(null);\n    const [isVisible, setIsVisible] = useState(true);\n    const [isUpdateRequired, setIsUpdateRequired] = useState(false);\n    const movesList = ['w', 's', 'a', 'd']\n    const loopRef = useRef();\n    const width = MAP_DIMENSIONS.COLS * TILE_SIZE;\n    const height = MAP_DIMENSIONS.ROWS * TILE_SIZE;\n\n    const moveCharacter = useCallback((e) => {\n        const key = e.key\n\n        e.preventDefault();\n        if (MOVE_DIRECTIONS[key]) {\n            const [x, y] = MOVE_DIRECTIONS[key];\n            const collusion = checkMapCollision(\n                character.x + x,\n                character.y + y,\n                [\n                    ...npc.npcs,\n                    ...objectNPC.objects\n                ],\n                map\n            )\n            if (collusion === false) {\n                setIsUpdateRequired(true);\n                move([x, y, key]);\n            }\n        }\n        if (key === \"Enter\") {\n            //debugger\n            if (dialog.open) {\n                finishAction();\n            } else {\n                doAction();\n            }\n        }\n        if(key === 'm'){\n            changeMap('sky');\n            updateNPC({idx:[2,1],'data-1':{ x:8 ,y: 3, stopMoving:true},'data-2':{ x:3 ,y: 13}})\n        }\n    }, [move, character.x, character.y, character.step, character.dir, dialog.open]);\n\n    const tick = useCallback(() => {\n        if (isUpdateRequired) {\n            setIsVisible(false);\n            setIsVisible(true);\n            setIsUpdateRequired(false);\n        }\n        loopRef.current = requestAnimationFrame(tick);\n    }, [isUpdateRequired, setIsVisible, setIsUpdateRequired]);\n\n    useEffect(() => {\n        setCtx(canvasRef.current.getContext('2d'));\n    }, [setCtx]);\n\n    useEffect(() => {\n        loopRef.current = requestAnimationFrame(tick);\n        return () => {\n            loopRef.current && cancelAnimationFrame(loopRef.current);\n        }\n    }, [loopRef, tick])\n\n\n    const moveNPC2 = (keyString, idx) => {\n        const currentNPC = npc.npcs[idx]\n        if (currentNPC.stopMoving) return\n        if (MOVE_DIRECTIONS[keyString]) {\n            const [x, y] = MOVE_DIRECTIONS[keyString];\n            const collusion = checkMapCollision(\n                currentNPC.x + x,\n                currentNPC.y + y,\n                [\n                    character,\n                    ...objectNPC.objects,\n                    ...npc.npcs.filter(npc => npc !== currentNPC)\n                ],\n                map\n            )\n            //console.log('is colusion:', collusion)\n            if (collusion === false) {\n                setIsUpdateRequired(true);\n                moveNPC([x, y, keyString, idx]);\n            }\n        }\n    }\n\n    const getRandom = (movesList) => {\n        return movesList[Math.floor(Math.random() * movesList.length)]\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            moveNPC2(getRandom(movesList),0)\n        }, 1500);\n        return () => clearInterval(interval);\n    }, [npc.npcs[0].x, npc.npcs[0].y, npc.npcs[0].stopMoving]);\n\n    useEffect(() => {\n        if(map ===\"evilKing\"){\n            const interval = setInterval(() => {\n                moveNPC2(getRandom(movesList), 1)\n            }, 1500);\n            return () => clearInterval(interval);\n        }\n    }, [npc.npcs[1].x, npc.npcs[1].y, npc.npcs[1].stopMoving, map]);\n\n    useEffect(() => {\n        if(map===\"evilKing\"){\n            const interval = setInterval(() => {\n                moveNPC2(getRandom(movesList), 2)\n            }, 1500);\n            return () => clearInterval(interval);\n        }\n    }, [npc.npcs[2].x, npc.npcs[2].y, npc.npcs[2].stopMoving, map]);\n\n    const finishAction = () => {\n        console.log(\"finish action\")\n        const openerId = dialog.openerId;\n        const otherThingIdx = parseInt(openerId.split('-')[1])\n        if(enterDungeon(openerId, otherThingIdx, dialog.action,setContents, setIsUpdateRequired, changeMap, updatePlayerPosition, updateNPC, updateObject)){\n            return;\n        }\n        else if(goToSky(dialog.action,setContents, setIsUpdateRequired, changeMap, updatePlayerPosition, updateNPC)){\n            return;\n        }\n        else if(battleEvilKind(dialog.action, otherThingIdx, setContents, onGameEnd)){\n            return;\n        }\n        else if(gameOver(dialog.action, otherThingIdx, setContents, onGameEnd)){\n            return;\n        }\n        else if(victory(dialog.action, otherThingIdx, setContents, setIsUpdateRequired, fireActionObject, updateNPC)){\n            return;\n        }\n        else if(leaveDungeon(openerId, otherThingIdx, dialog.action, setContents, setIsUpdateRequired, changeMap, updatePlayerPosition, updateNPC)){\n            return;\n        }\n        else if(gameWon(dialog.action, otherThingIdx, setContents, onGameEnd)){\n            return;\n        }\n\n        if (openerId.startsWith('npc-') && npc.npcs[otherThingIdx].stopMoving) {\n            setContents({open: false, title: '', text: '', openerId: '', action: ''});\n            fireAction({idx: otherThingIdx});\n        }\n        else if (openerId.startsWith('object-')) {\n            setIsUpdateRequired(true);\n            const prevTitle = dialog.title\n\n            setContents({open: false, title: '', text: '', openerId: '', action: ''});\n            fireActionObject({idx: otherThingIdx});\n            if( prevTitle!== 'Nothing!') addToInventory({item: objectNPC.objects[otherThingIdx]})\n        }\n        else{\n            setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        }\n    }\n    const doAction = () => {\n        console.log(\"action\")\n        if(map ==='sky' && character.x === 5 && character.y === 6 ){\n            setContents(dialogs.sky[\"npc-0\"].enterDungeon.content)\n        }\n        const otherThing = whoIsOnMap(character.x, character.y, [...npc.npcs, ...objectNPC.objects])\n        console.log(otherThing)\n        if (!otherThing) return\n        if (otherThing.type === 'npc') {\n            const otherThingIdx = parseInt(otherThing.id.split('-')[1])\n            fireAction({idx: otherThingIdx});\n            if(map === 'forest') {\n                if (fullyGeared(character.inventory) === 3) {\n                    if (winner === undefined || winner === 'Blue Dragon') {\n                        setContents(dialogs.forest[otherThing.id].beforeFight.afterGear.content)\n                        setTimeout(()=> {\n                            onGameEnd({mode: 'battle', winner: undefined, selectedOpponentIdx: otherThingIdx})\n                            },500\n                        )}\n                    if (winner === 'Jihoon') {\n                        setContents(dialogs.forest[otherThing.id].afterFight.goToSky.content)\n                    }\n                } else {\n                    setContents(dialogs.forest[otherThing.id].beforeFight.beforeGear.content)\n                }\n            }\n            if(map==='evilKing') {\n                setContents(dialogs.evilKing[otherThing.id].afterVictory.content)\n            }\n        }\n        if (otherThing.type === 'objectNPC') {\n            if (otherThing.tookItem) {\n                setContents({\n                    open: true,\n                    title: \"Nothing!\",\n                    text: `Here is nothing to take from.`,\n                    openerId: otherThing.id,\n                    action: ''\n                })\n            } else {\n                setContents({\n                    open: true,\n                    title: \"Item found!\",\n                    text: `You found ${otherThing.item}!`,\n                    openerId: otherThing.id,\n                    action: ''\n                })\n            }\n        }\n    }\n    useEffect(() => {\n        document.addEventListener('keypress', moveCharacter);\n        return () => {\n            document.removeEventListener('keypress', moveCharacter);\n        }\n    }, [moveCharacter]);\n\n    return (\n        <CanvasContext.Provider value={ctx}>\n            <canvas style={{zIndex: 1}}\n                    ref={canvasRef}\n                    width={width}\n                    height={height}\n                    id={'playerCanvas'}\n            />\n            {isVisible && children}\n        </CanvasContext.Provider>\n    );\n};\n\nexport default connect(mapStateToProps, mapDispatch)(GameLoop);\n","import {dialogs} from \"./dialog_utils\";\n\nexport const enterDungeon = (openerId, otherThingIdx, action, setContents, setIsUpdateRequired, changeMap, updatePlayerPosition, updateNPC, updateObject) =>{\n    if(action === 'enter-dungeon'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        setIsUpdateRequired(true)\n        changeMap('evilKing');\n        updateObject({idx:[5,6],'data-5':{ x:4 ,y: 9},'data-6':{ x:4 ,y: 10}})\n        setIsUpdateRequired(true)\n        updatePlayerPosition({x:7, y: 8, step: 0, dir: 3})\n        updateNPC({idx:[2,1],'data-1':{ x:8 ,y: 3, stopMoving:true},'data-2':{ x:3 ,y: 13}})\n        setIsUpdateRequired(true)\n        setTimeout(()=> {\n                setContents(dialogs.evilKing[\"npc-1\"].beforeFight.content)\n            },200\n        )\n        return true;\n    }\n    return false;\n}\n\nexport const leaveDungeon = (openerId, otherThingIdx, action, setContents, setIsUpdateRequired, changeMap, updatePlayerPosition, updateNPC) =>{\n    if(action === 'leave-dungeon'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        setIsUpdateRequired(true)\n        changeMap('sky');\n        updateNPC({idx:[2],'data-2':{ x:6 ,y: 7, step: 0, dir: 0, map:['sky', 'evilKing']}});\n        setIsUpdateRequired(true);\n        updatePlayerPosition({x:5, y: 7, step: 0, dir: 0});\n        setIsUpdateRequired(true)\n        setTimeout(()=> {\n                setContents(dialogs.sky[\"npc-0\"].leftDungeon.content)\n            },1000\n        )\n        return true;\n    }\n    return false;\n}\n\nexport const goToSky = (action, setContents, setIsUpdateRequired, changeMap, updatePlayerPosition, updateNPC) => {\n    if(action === 'go-to-sky'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        setIsUpdateRequired(true)\n        changeMap('sky');\n        setIsUpdateRequired(true)\n        updatePlayerPosition({x:7, y: 12, step: 0, dir: 3})\n        updateNPC({idx:[0],'data-0':{ x:8 ,y: 12, step: 0, dir: 3, stopMoving:true}})\n        setIsUpdateRequired(true)\n        return true\n    }\n    return false;\n}\n\nexport const battleEvilKind = (action, otherThingIdx, setContents, onGameEnd) => {\n    if(action === 'battle-evil-king'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        console.log(otherThingIdx)\n        onGameEnd({mode: 'battle', winner: undefined, selectedOpponentIdx: otherThingIdx})\n        return true;\n    }\n    return false;\n}\n\nexport const gameOver = (action, otherThingIdx, setContents, onGameEnd) => {\n    if(action === 'game-over'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        console.log(otherThingIdx)\n        onGameEnd({mode: 'game-over', winner: 'Evil King', selectedOpponentIdx: otherThingIdx})\n        return true;\n    }\n    return false;\n}\nexport const gameWon = (action, otherThingIdx, setContents, onGameEnd) => {\n    if(action === 'game-won'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        console.log(otherThingIdx)\n        onGameEnd({mode: 'game-won', winner: 'Jihoon', selectedOpponentIdx: otherThingIdx})\n        return true;\n    }\n    return false;\n}\nexport const victory = (action, otherThingIdx, setContents, setIsUpdateRequired, fireActionObject, updateNPC) => {\n    if(action === 'victory'){\n        setContents({open: false, title: '', text: '', openerId: '', action: ''});\n        fireActionObject({idx: 5})\n        fireActionObject({idx: 6})\n        setIsUpdateRequired(true)\n        updateNPC({idx:[2,1 ],'data-2':{ x:4 ,y: 8}, 'data-1':{dead:true, stopMoving: true}})\n        setIsUpdateRequired(true)\n        return true;\n    }\n    return false;\n}\n\n","import {useContext, useEffect} from 'react';\n\nimport CanvasContext from './canvasContext';\nimport {TILE_SIZE} from './constants';\n\nconst Grid = ({width, height, children}) => {\n    const ctx = useContext(CanvasContext);\n    useEffect(() => {\n        for(let i = 0; i < height; i++) {    \n            const y = i * TILE_SIZE;         \n            ctx.beginPath();\n            ctx.moveTo(0, y);\n            ctx.lineTo(width, y);\n            ctx.stroke();\n            ctx.closePath();\n        }\n        for(let j = 0; j < width; j++) {\n            const x = j * TILE_SIZE;\n            ctx.beginPath();\n            ctx.moveTo(x, 0);\n            ctx.lineTo(x, height);\n            ctx.stroke();\n            ctx.closePath();\n        }\n    }, [ctx, height, width]);\n\n    return children;\n}\n\nexport default Grid;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst mapImagesSlice = createSlice({\n    name: 'images',\n    initialState: {},\n    reducers: {\n        bufferImage(state, action) {\n            const path = action.payload;\n            if (path) {\n                state[path] = 1;\n            }            \n        },\n    }\n});\n\nexport const { bufferImage } = mapImagesSlice.actions;\n\nexport default mapImagesSlice.reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {MAP_TILE_IMAGES} from './constants';\nimport {bufferImage} from './slices/mapImagesSlice';\n\nconst mapDispatch = { bufferImage };\n\nconst ImagesBuffer = ({ bufferImage }) => {\n    return (\n        <div className=\"images-buffer\">\n        {\n            Object.keys(MAP_TILE_IMAGES).map(key => {\n                return (\n                    <img\n                        key={`map-tile-img-${key}`} \n                        id={`map-tile-img-${key}`} \n                        src={`${MAP_TILE_IMAGES[key]}`}\n                        alt={`map-tile-${key}`}\n                        onLoad={() => { bufferImage(MAP_TILE_IMAGES[key]); }}\n                    />\n                );\n            })\n        }\n        </div>\n    )\n}\n\nexport default connect(null, mapDispatch)(ImagesBuffer);\n","import {useContext, useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport {LAYERS, MAP_DIMENSIONS, TILE_SIZE} from './constants';\nimport CanvasContext from './canvasContext';\nimport {loadMap} from './slices/statusSlice';\n\n\nconst Map = ({ loadMap, map }) => {\n    const ctx = useContext(CanvasContext);\n    const {COLS, ROWS} = MAP_DIMENSIONS;\n\n    useEffect(() => {\n        console.log('map effect');\n        const drawLayer = grid => {\n            for (let i = 0; i < ROWS; i++) {\n                for (let j = 0; j < COLS; j++) {\n                    const item = grid[i][j];\n                    if (!item) {\n                        // empty tile\n                        continue;\n                    }                \n                    const img = document.querySelector(`#map-tile-img-${item}`);\n                    const x = j * TILE_SIZE;\n                    const y = i * TILE_SIZE;\n                    ctx.drawImage(\n                        img,\n                        0,\n                        0,\n                        TILE_SIZE,\n                        TILE_SIZE,\n                        x,\n                        y,\n                        TILE_SIZE,\n                        TILE_SIZE,\n                    );\n                }\n            }\n        };\n\n        drawLayer(LAYERS[map][0]);\n        drawLayer(LAYERS[map][1]);\n        loadMap(true);\n    }, [COLS, ROWS, ctx, loadMap, map]);\n\n    return null;\n};\n\n\nconst mapStateToProps = (state) => ({map: state.gameStatus.map})\nconst mapDispatch = { loadMap };\nexport default connect(mapStateToProps, mapDispatch)(Map);\n","export const HEROES_SPRITE_NAKED  = 'assets/heroes/jihoon_naked.png';\nexport const HEROES_SPRITE  = 'assets/heroes/jihoon.png';\n\nexport const HERO_IMAGE_SIZE = 32;\n\nexport const NPC_IMAGE_SIZE = {\"npc-0\":48, \"npc-1\": 32, \"npc-2\":32, \"npc-3\":32};\nexport const NPC_SPRITE  = {\n    \"npc-0\": 'assets/heroes/blue-dragon.png',\n    \"npc-1\": 'assets/heroes/evil-king.png',\n    \"npc-2\": 'assets/heroes/priska.png',\n    \"npc-3\": 'assets/heroes/blue-dragon.png',\n};\nexport const EVIL_KING_DEAD = 'assets/heroes/evil-king_dead.png'\nexport const OBJECT_NPC_SPRITE  = {\n    \"object-0\": ['assets/map/PineTools.com_files/row-6-column-1.png','assets/map/PineTools.com_files/row-6-column-3.png'],\n    \"object-1\": ['assets/map/PineTools.com_files/row-6-column-1.png','assets/map/PineTools.com_files/row-6-column-3.png'],\n    \"object-2\": ['assets/map/PineTools.com_files/row-11-column-7.png','assets/map/PineTools.com_files/row-11-column-6.png'],\n    \"object-3\": ['assets/map/PineTools.com_files/row-12-column-6.png','assets/map/PineTools.com_files/row-11-column-6.png'],\n    \"object-4\": ['assets/map/PineTools.com_files/row-6-column-1.png','assets/map/PineTools.com_files/row-6-column-3.png'],\n    \"object-5\": ['assets/map/evil/row-15-column-4.png','assets/map/evil/row-15-column-5.png'],\n    \"object-6\": ['assets/map/evil/row-16-column-4.png','assets/map/evil/row-16-column-5.png'],\n};\n","import React, {useEffect, useContext, useRef} from 'react';\nimport {connect} from 'react-redux';\n\nimport CanvasContext from './canvasContext';\nimport {HEROES_SPRITE, HERO_IMAGE_SIZE, HEROES_SPRITE_NAKED} from '../constants';\nimport {TILE_SIZE} from './constants';\nimport {bufferImage} from './slices/characterSlice';\nimport {loadCharacter} from './slices/statusSlice';\nimport {fullyGeared} from \"./utils\";\n\nconst Character = ({x, y, step=0, dir=0, heroClass, heroImg, inventory, loadCharacter, bufferImage}) => {\n    const ctx = useContext(CanvasContext);\n    const imgRef = useRef(null);\n\n    const img = fullyGeared(inventory) === 3 ? HEROES_SPRITE: HEROES_SPRITE_NAKED\n\n    useEffect(() => {\n        if (heroImg) {\n            ctx.drawImage(\n                document.querySelector(heroImg),\n                step* HERO_IMAGE_SIZE,\n                dir* HERO_IMAGE_SIZE,\n                HERO_IMAGE_SIZE,\n                HERO_IMAGE_SIZE ,\n                x * TILE_SIZE,\n                y * TILE_SIZE,\n                HERO_IMAGE_SIZE,\n                HERO_IMAGE_SIZE,\n            );\n            loadCharacter(true);\n        }\n        return ()=>{}\n    }, [ctx, heroClass, heroImg, x, y, step, dir, loadCharacter, inventory]);\n\n    return (\n        <img\n            id=\"character\" \n            alt=\"character\"\n            ref={imgRef} \n            onLoad={\n                () => bufferImage(`#${imgRef.current.id}`)\n            }\n            className=\"images-buffer\"\n            src={img}\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({...state.character});\n\nconst mapDispatch = {loadCharacter, bufferImage};\n\nexport default connect(mapStateToProps, mapDispatch)(Character);\n","import React, {useEffect, useContext, useRef} from 'react';\nimport {connect} from 'react-redux';\n\nimport CanvasContext from './canvasContext';\nimport {NPC_SPRITE, NPC_IMAGE_SIZE, EVIL_KING_DEAD} from '../constants';\nimport {TILE_SIZE} from './constants';\nimport {bufferImage} from './slices/npcSlice';\nimport {loadNPC} from './slices/statusSlice';\n\nconst NPC = ({id, x, y ,step=0, dir=0,\n                 heroImg,\n                 dead,\n                 idx,\n                 loadNPC, bufferImage,\n                 map, currentMap, }) => {\n    const ctx = useContext(CanvasContext);\n    const imgRef = useRef(null);\n    const currentImgSize = NPC_IMAGE_SIZE[id]\n\n    useEffect(() => {\n        if (heroImg && map.includes(currentMap )) {\n            ctx.drawImage(\n                document.querySelector(heroImg),\n                step* currentImgSize,\n                dir* currentImgSize,\n                currentImgSize,\n                currentImgSize ,\n                (x * TILE_SIZE),\n                (y * TILE_SIZE),\n                currentImgSize,\n                currentImgSize,\n            );\n            loadNPC({idx: idx, val:true});\n        }\n        return ()=>{}\n    }, [ctx, heroImg, x, y, step, dir, loadNPC, currentMap ]);\n\n        return (\n            <img\n                key={id}\n                id={id}\n                alt=\"npc\"\n                ref={imgRef}\n                onLoad={\n                    () => {\n                        bufferImage({idx: idx, heroImg: `#${imgRef.current.id}`})\n                    }\n                }\n                className={\"images-buffer\"}\n                src={!dead? NPC_SPRITE[id] : EVIL_KING_DEAD}\n            />\n        );\n};\n\nconst NPCS = (props) => {\n    return(\n        <>\n            {props.npcs.map((elem, idx)=>{\n                return NPC(\n                    {\n                        ...elem,\n                        idx,\n                        currentMap: props.currentMap,\n                        bufferImage:props.bufferImage,\n                        loadNPC: props.loadNPC,\n                    }\n                )\n            })}\n        </>\n    );\n}\nconst mapStateToProps = (state) => ({...state.npc, currentMap: state.gameStatus.map, });\n\nconst mapDispatch = {bufferImage, loadNPC};\n\nexport default connect(mapStateToProps, mapDispatch)(NPCS);\n","import React, {useEffect, useContext, useRef} from 'react';\nimport {connect} from 'react-redux';\n\nimport CanvasContext from './canvasContext';\nimport {OBJECT_NPC_SPRITE} from '../constants';\nimport {TILE_SIZE} from './constants';\nimport {bufferImage} from './slices/objectSlice';\nimport {loadObject} from './slices/statusSlice';\n\nconst ObjectNPC = ({id, x, y, objectImg, map, idx,  loadObject, bufferImage, tookItem, currentMap}) => {\n    const ctx = useContext(CanvasContext);\n    const imgRef = useRef(null);\n\n    useEffect(() => {\n        if (objectImg && map.includes(currentMap )) {\n            ctx.drawImage(\n                document.querySelector(objectImg),\n                0* 32,\n                0* 32,\n                32,\n                32 ,\n                x * TILE_SIZE,\n                y * TILE_SIZE,\n                32,\n                32,\n            );\n            loadObject({idx: idx, val:true});\n        }\n        return ()=>{}\n    }, [ctx, loadObject, tookItem, currentMap]);\n\n    return (\n        <img\n            key={id}\n            id={id}\n            alt=\"objectNPC\"\n            ref={imgRef}\n            onLoad={\n                () => {\n                    bufferImage({idx: idx, objectImg: `#${imgRef.current.id}`})\n                }\n            }\n            className=\"images-buffer\"\n            src={!tookItem?  OBJECT_NPC_SPRITE[id][0] :  OBJECT_NPC_SPRITE[id][1]}\n        />\n    );\n};\n\n\nconst ObjectNPCs = (props) => {\n    return(\n        <div>\n            {props.objects.map((elem, idx)=>{\n               return ObjectNPC({...elem, idx, bufferImage:props.bufferImage, loadObject: props.loadObject, currentMap: props.currentMap})\n            })}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({...state.objectNPC, currentMap: state.gameStatus.map,});\n\nconst mapDispatch = {loadObject, bufferImage};\n\nexport default connect(mapStateToProps, mapDispatch)(ObjectNPCs);","import React, {useContext, useEffect, useRef} from 'react';\nimport { connect } from 'react-redux';\nimport CanvasContext from './canvasContext';\nimport {bufferBackgroundImage, loadBackground} from \"./slices/statusSlice\";\nimport Sky from \"../images/sky_background.png\"\n\nconst BackgroundView = ({backgroundImg, bufferBackgroundImage}) => {\n    const ctx = useContext(CanvasContext);\n    const imgRef = useRef(null);\n\n    useEffect(() => {\n        console.log('background')\n        if(backgroundImg) {\n            ctx.drawImage(document.querySelector(backgroundImg), 0, 0);\n        }\n        loadBackground(true);\n    }, [ctx, backgroundImg])\n\n    return (\n        <img\n            id=\"skybackground\"\n            src={Sky}\n            alt='background'\n            ref={imgRef}\n            className=\"images-buffer\"\n            onLoad={\n            () => {\n                bufferBackgroundImage(`#${imgRef.current.id}`)\n            }\n        }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({backgroundImg: state.gameStatus.backgroundImg});\n\nconst mapDispatch = {bufferBackgroundImage};\nexport default connect(mapStateToProps,mapDispatch)(BackgroundView);\n","import React, {useContext, useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport Grid from './Grid';\nimport ImagesBuffer from './ImagesBuffer';\nimport Map from './Map';\nimport CanvasContext from './canvasContext';\nimport Character from './Character';\nimport {MAP_DIMENSIONS, TILE_SIZE, MAP_TILE_IMAGES} from './constants';\n\nimport NPC from \"./NPC\";\nimport ObjectNPC from \"./ObjectNPC\";\nimport BackgroundView from \"./BackgroundView\";\n\nconst TileView = ({mapImagesLoaded, gameStatus}) => {\n    const width = MAP_DIMENSIONS.COLS * TILE_SIZE;\n    const height = MAP_DIMENSIONS.ROWS * TILE_SIZE;\n    const ctx = useContext(CanvasContext);\n\n    useEffect(() => {\n        return () => {\n            return () => {\n                ctx && ctx.clearRect(0, 0, ctx.width, ctx.height);\n            }\n        }\n    }, [ctx, gameStatus.map])\n    return (\n        <>\n            <BackgroundView/>\n            <ImagesBuffer />\n            {Object.keys(mapImagesLoaded).length === Object.keys(MAP_TILE_IMAGES).length &&\n                <>\n                    <Grid width={width} height={height}>\n                        <Map />                \n                    </Grid>\n                </>\n            }\n            {gameStatus.mapLoaded && <ObjectNPC/>}\n            {gameStatus.mapLoaded && <NPC/>}\n            {gameStatus.mapLoaded && <Character/>}\n        </>\n    );\n};\n\nconst mapStateToProps = ({mapImagesLoaded, gameStatus}) => ({mapImagesLoaded, gameStatus});\n\nexport default connect(mapStateToProps)(TileView);\n","import * as React from 'react';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport {connect} from \"react-redux\";\nimport {styled} from \"@mui/material\";\n\nexport const GameUIDialog = styled(Dialog)`\n\t& .MuiDialog-container .MuiPaper-root.MuiDialog-paper {\n\t    background-color: rgba(19, 28, 106, 0.6);\n\t    & h2, p{\n\t        color: white;\n\t    }\n\t    & p{\n\t        font-size: 1.5em;\n\t        padding: 12px;\n\t    }\n\t}\n`;\n\n\nfunction SimpleDialog({dialog}) {\n    const {open, title, text,action} = dialog\n\n    const message = () => {\n        if(action ==='video'){\n            return(<video height=\"400\" controls>\n                    <source src={text} type=\"video/mp4\"/>\n                </video>\n            )\n        }\n        return (<DialogContentText>{text}</DialogContentText>)\n    }\n\n\n    return (\n        <GameUIDialog  open={open} fullWidth>\n            <DialogTitle>{title}</DialogTitle>\n                {message()}\n        </GameUIDialog>\n    );\n}\n\nconst mapStateToProps = ({dialog}) => ({dialog});\n\nexport default connect(mapStateToProps)(SimpleDialog);","export const wait = ms =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n\nexport const attack = ({ attacker, receiver }) => {\n  const receivedDamage =\n    attacker.attack - (attacker.level - receiver.level) * 1.25;\n\n  const finalDamage = receivedDamage - receiver.defense / 2;\n\n  return finalDamage;\n};\nexport const magic = ({ attacker, receiver }) => {\n  const receivedDamage =\n    attacker.magic - (attacker.level - receiver.level) * 1.25;\n\n  const finalDamage = receivedDamage - receiver.magicDefense / 2;\n\n  return finalDamage;\n};\nexport const heal = ({ receiver }) => {\n  return receiver.magic + receiver.level * 0.25;\n};\n","import React from 'react';\nimport styles from './stylesBar.module.css'\n\nexport const Bar = ({ value, maxValue, label }) => (\n    <div className={styles.main}>\n        <div className={styles.label}>{label}</div>\n        <div className={styles.max}>\n            <div\n                className={styles.value}\n                style={{ width: `${(value / maxValue) * 100}%` }}\n            ></div>\n        </div>\n    </div>\n);\n","import React from 'react';\nimport styles from './stylesPlayerSummary.module.css'\nimport {Bar} from './bar/Bar';\n\nexport const PlayerSummary = ({\n                                  main,\n                                  name,\n                                  level,\n                                  health,\n                                  maxHealth,\n                              }) => (\n    <div\n        className={styles.main}\n        style={{backgroundColor: main ? 'wheat' : 'wheat'}}\n    >\n        <div className={styles.info}>\n            <div className={styles.name}>{name}</div>\n            <div className={styles.level}>Lvl {level}</div>\n        </div>\n\n        <div className={styles.health}>\n            <Bar label=\"HP\" value={health} maxValue={maxHealth}/>\n        </div>\n    </div>\n);\n","import { wait } from '../shared/helpers';\nimport { useEffect, useState } from 'react';\n\nexport const useTypedMessage = message => {\n  const [typedMessage, setTypedMessage] = useState('');\n\n  useEffect(() => {\n    setTypedMessage('');\n\n    if (message.length) {\n      (async () => {\n        let visibleMessage = '';\n        for (let i = 0; i < message.length; i++) {\n          await wait(25);\n\n          visibleMessage = visibleMessage + message[i];\n\n          setTypedMessage(visibleMessage);\n        }\n      })();\n    }\n    return () =>{}\n  }, [message]);\n\n  return typedMessage;\n};\n","import {\n  wait,\n  magic,\n  heal,\n  attack,\n} from '../shared/helpers';\nimport { useEffect, useState } from 'react';\n\nexport const useBattleSequence = (sequence, playerSummary, npcSummary) => {\n  const [turn, setTurn] = useState(0);\n  const [inSequence, setInSequence] = useState(false);\n\n  const [playerHealth, setPlayerHealth] = useState(playerSummary.maxHealth);\n  const [opponentHealth, setOpponentHealth] = useState(\n      npcSummary.maxHealth,\n  );\n\n  const [announcerMessage, setAnnouncerMessage] = useState('');\n\n  const [playerAnimation, setPlayerAnimation] = useState('static');\n  const [opponentAnimation, setOpponentAnimation] = useState('static');\n\n  useEffect(() => {\n    const { mode, turn } = sequence;\n\n    if (mode) {\n      const attacker = turn === 0 ? playerSummary : npcSummary;\n      const receiver = turn === 0 ? npcSummary : playerSummary;\n\n      switch (mode) {\n        case 'attack': {\n          const damage = attack({ attacker, receiver });\n\n          (async () => {\n            setInSequence(true);\n            setAnnouncerMessage(`${attacker.name} has chosen to attack!`);\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('attack')\n              : setOpponentAnimation('attack');\n            await wait(100);\n\n            turn === 0\n              ? setPlayerAnimation('static')\n              : setOpponentAnimation('static');\n            await wait(500);\n\n            turn === 0\n              ? setOpponentAnimation('damage')\n              : setPlayerAnimation('damage');\n            await wait(750);\n\n            turn === 0\n              ? setOpponentAnimation('static')\n              : setPlayerAnimation('static');\n            setAnnouncerMessage(`${receiver.name} felt that!`);\n            turn === 0\n              ? setOpponentHealth(h => (h - damage > 0 ? h - damage : 0))\n              : setPlayerHealth(h => (h - damage > 0 ? h - damage : 0)); // We don't want a negative HP.\n            await wait(2000);\n\n            setAnnouncerMessage(`Now it's ${receiver.name}'s turn!`);\n            await wait(1500);\n\n            setTurn(turn === 0 ? 1 : 0);\n            setInSequence(false);\n          })();\n\n          break;\n        }\n\n        case 'magic': {\n          const damage = magic({ attacker, receiver });\n\n          (async () => {\n            setInSequence(true);\n            setAnnouncerMessage(`${attacker.name} has cast a spell!`);\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('magic')\n              : setOpponentAnimation('magic');\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('static')\n              : setOpponentAnimation('static');\n            await wait(500);\n\n            turn === 0\n              ? setOpponentAnimation('damage')\n              : setPlayerAnimation('damage');\n            await wait(750);\n\n            turn === 0\n              ? setOpponentAnimation('static')\n              : setPlayerAnimation('static');\n            setAnnouncerMessage(\n              `${receiver.name} doesn't know what hit him!`,\n            );\n            turn === 0\n              ? setOpponentHealth(h => (h - damage > 0 ? h - damage : 0))\n              : setPlayerHealth(h => (h - damage > 0 ? h - damage : 0)); // We don't want a negative HP.\n            await wait(2500);\n\n            setAnnouncerMessage(`Now it's ${receiver.name}'s turn!`);\n            await wait(1500);\n\n            setTurn(turn === 0 ? 1 : 0);\n            setInSequence(false);\n          })();\n\n          break;\n        }\n\n        case 'heal': {\n          const recovered = heal({ receiver: attacker });\n\n          (async () => {\n            setInSequence(true);\n            setAnnouncerMessage(`${attacker.name} has chosen to heal!`);\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('magic')\n              : setOpponentAnimation('magic');\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('static')\n              : setOpponentAnimation('static');\n            await wait(500);\n\n            setAnnouncerMessage(`${attacker.name} has recovered health.`);\n            turn === 0\n              ? setPlayerHealth(h =>\n                  h + recovered <= attacker.maxHealth\n                    ? h + recovered\n                    : attacker.maxHealth,\n                )\n              : setOpponentHealth(h =>\n                  h + recovered <= attacker.maxHealth\n                    ? h + recovered\n                    : attacker.maxHealth,\n                ); // We don't want to set HP more than the max\n            await wait(2500);\n\n            setAnnouncerMessage(`Now it's ${receiver.name}'s turn!`);\n            await wait(1500);\n\n            setTurn(turn === 0 ? 1 : 0);\n            setInSequence(false);\n          })();\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    }\n    return()=>{}\n  }, [sequence]);\n\n  return {\n    turn,\n    inSequence,\n    playerHealth,\n    opponentHealth,\n    playerAnimation,\n    opponentAnimation,\n    announcerMessage,\n  };\n};\n","import React from 'react';\nimport styles from './stylesBattleMenu.module.css';\n\nexport const BattleMenu = ({ onAttack, onMagic, onHeal }) => (\n    <div className={styles.main}>\n        <div onClick={onAttack} className={styles.option}>\n            Attack\n        </div>\n        <div onClick={onMagic} className={styles.option}>\n            Magic\n        </div>\n        <div onClick={onHeal} className={styles.option}>\n            Heal\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { useTypedMessage } from './hooks';\nimport styles from './stylesBattleAnnouncer.module.css';\n\nexport const BattleAnnouncer = ({ message }) => {\n  const typedMessage = useTypedMessage(message);\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.message}>{typedMessage}</div>\n    </div>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport { wait } from './shared/helpers';\nimport styles from './stylesBattle.module.css';\nimport {PlayerSummary} from \"./PlayerSummary\";\nimport {useAIOpponent, useBattleSequence} from \"./hooks\";\nimport {BattleMenu} from \"./BattleMenu\";\nimport {BattleAnnouncer} from \"./BattleAnnouncer\";\nimport {onGameEnd} from \"../tile-view/slices/statusSlice\";\nimport {updatePlayerSummary} from \"../tile-view/slices/characterSlice\";\nimport {setContents} from '../game-ui/slices/dialogSlice'\nimport {dialogs} from \"../tile-view/dialog_utils\";\nimport BattleMusic from \"../images/battle.mp3\"\nimport BattleMusic2 from \"../images/battle2.mp3\"\n\nconst Battle = ({character, npcs, selectedOpponentIdx, onGameEnd, setContents, updatePlayerSummary}) => {\n    //debugger\n    const [sequence, setSequence] = useState({});\n    const {playerSummary} = character;\n    const { npcSummary} = npcs[selectedOpponentIdx];\n\n\n    const {\n        turn,\n        inSequence,\n        playerHealth,\n        opponentHealth,\n        playerAnimation,\n        opponentAnimation,\n        announcerMessage,\n    } = useBattleSequence(sequence, playerSummary, npcSummary);\n\n    const aiChoice = useAIOpponent(turn);\n    useEffect(() => {\n        if (aiChoice && turn === 1 && !inSequence) {\n            setSequence({ turn, mode: aiChoice });\n        }\n        return()=>{setSequence({})}\n    }, [turn, aiChoice, inSequence]);\n\n    useEffect(() => {\n        if (playerHealth === 0 || opponentHealth === 0) {\n            (async () => {\n                await wait(1000);\n                onGameEnd(playerHealth === 0 ? {mode:'world' , winner: npcSummary.name} : {mode:'world' , winner: playerSummary.name});\n            })();\n            if(opponentHealth === 0){\n                if(npcSummary.name === 'Blue Dragon') {\n                    updatePlayerSummary({\n                        level: 3,\n                        health: playerHealth,\n                        maxHealth: 250,\n                        attack: 70,\n                        magic: 55,\n                        defense: 45,\n                        magicDefense: 35\n                    })\n                    setTimeout(()=> {\n                        setContents(dialogs.forest[\"npc-0\"].afterFight.won.content)\n                        },500\n                    )\n                }\n                if(npcSummary.name === 'Evil King') {\n                    updatePlayerSummary({\n                        level: 12,\n                        health: playerHealth,\n                        maxHealth: 450,\n                        attack: 100,\n                        magic: 75,\n                        defense: 55,\n                        magicDefense: 55\n                    })\n                    setTimeout(()=> {\n                        setContents(dialogs.evilKing[\"npc-1\"].afterFight.won.content)\n                        },500\n                    )\n                }\n            }\n            if(playerHealth === 0){\n                if(npcSummary.name === 'Blue Dragon'){\n                    setContents(dialogs.forest[\"npc-0\"].afterFight.lost.content)\n                }\n                else if (npcSummary.name === 'Evil King'){\n                    setContents(dialogs.evilKing[\"npc-1\"].afterFight.lost.content)\n                }\n\n                updatePlayerSummary({health: playerHealth})\n            }\n        }\n        return()=>{setSequence({})}\n    }, [playerHealth, opponentHealth, onGameEnd]);\n\n    return (\n        <div className={styles.mainContainer}>\n            {npcSummary.name === \"Blue Dragon\"?\n                <audio id=\"audio\" loop autoPlay>\n                    <source src={BattleMusic2} type=\"audio/mp3\"/>\n                </audio>:\n                <audio id=\"audio\" loop autoPlay>\n                    <source src={BattleMusic} type=\"audio/mp3\"/>\n                </audio>\n            }\n\n            <div className={styles.gameHeader}>\n                {playerSummary.name} vs {npcSummary.name}\n            </div>\n            <div className={styles.opponent}>\n                <div className={styles.summary}>\n                    <PlayerSummary\n                        main={false}\n                        health={opponentHealth}\n                        name={npcSummary.name}\n                        level={npcSummary.level}\n                        maxHealth={npcSummary.maxHealth}\n                    />\n                </div>\n            </div>\n\n            <div className={styles.characters}>\n\n                <div className={styles.gameImages}>\n                    <div className={styles.playerSprite}>\n                        <img\n                            alt={playerSummary.name}\n                            src={playerSummary.img}\n                            className={styles[playerAnimation]}\n                        />\n                    </div>\n                    <div className={styles.opponentSprite}>\n                        <img\n                            alt={npcSummary.name}\n                            src={npcSummary.img}\n                            className={styles[opponentAnimation]}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className={styles.user}>\n                <div className={styles.summary}>\n                    <PlayerSummary\n                        main={true}\n                        health={playerHealth}\n                        name={playerSummary.name}\n                        level={playerSummary.level}\n                        maxHealth={playerSummary.maxHealth}\n                    />\n                </div>\n\n                <div className={styles.hud}>\n                    <div className={styles.hudChild}>\n                        <BattleAnnouncer\n                            message={\n                                announcerMessage || `What will ${playerSummary.name} do?`\n                            }\n                        />\n                    </div>\n                    {!inSequence && turn === 0 && (\n                        <div className={styles.hudChild}>\n                            <BattleMenu\n                                onHeal={() => setSequence({ mode: 'heal', turn })}\n                                onMagic={() => setSequence({ mode: 'magic', turn })}\n                                onAttack={() => setSequence({ mode: 'attack', turn })}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({character:{...state.character}, npcs:[...state.npc.npcs], selectedOpponentIdx: state.gameStatus.selectedOpponentIdx})\nconst mapDispatch =  {onGameEnd, setContents, updatePlayerSummary}\nexport default connect(mapStateToProps, mapDispatch)(Battle);\n","import { useEffect, useState } from 'react';\n\nexport const useAIOpponent = turn => {\n  const [aiChoice, setAIChoice] = useState('');\n\n  useEffect(() => {\n    if (turn === 1) {\n      const options = ['attack', 'magic', 'heal'];\n      setAIChoice(options[Math.floor(Math.random() * options.length)]);\n    }\n    return()=>{}\n  }, [turn]);\n\n  return aiChoice;\n};\n","import React from 'react';\nimport GameUI from './game-ui/GameUI';\nimport GameLoop from './tile-view/GameLoop';\nimport TileView from './tile-view/TileView';\n\nimport './App.css';\nimport styles from './stylesApp.module.css';\nimport SimpleDialog from \"./game-ui/SimpleDialog\";\nimport Battle from \"./battle/Battle\";\nimport {connect} from \"react-redux\";\nimport {onGameEnd} from \"./tile-view/slices/statusSlice\";\nimport {setContents} from './game-ui/slices/dialogSlice'\nimport Sky from \"./images/sky_background.png\"\nimport Reward from \"./images/message.mp4\"\n\nfunction App({mode, onGameEnd, setContents}) {\n    const currentMode = mode;\n\n  return (\n    <>\n        <header>        \n        </header>\n        <main className=\"content\">\n            <SimpleDialog />\n                <>\n                    <GameUI />\n                    <div id=\"stage\" style={{width: 544, height: 480, backgroundImage: Sky}}>\n                    <GameLoop>\n                        <TileView />\n                    </GameLoop>\n                    </div>\n                </>\n            {currentMode === 'start' ?\n                <div className={styles.gameOverContainer}>\n                    <div className={styles.gameOver}>~~The Rescue~~</div>\n                    <div className={styles.startGameButtonContainer}>\n                        <span className={styles.startGameButton}\n                              onClick={()=> {\n                                  onGameEnd({mode: 'world', winner: undefined, selectedOpponentIdx: 0})\n                              }}\n                        >\n                            Start\n                        </span>\n                    </div>\n                    <div>Instructions:\n                        <ul>\n                            <li>use <kbd>W</kbd>, <kbd>A</kbd>, <kbd>S</kbd>, <kbd>D</kbd> to navigate</li>\n                            <li>use <kbd>Enter</kbd> and <kbd>Mouse</kbd> to cause events</li>\n                        </ul>\n                    </div>\n                </div>\n                :''\n            }\n            {currentMode === 'battle' ?\n            <Battle/>\n                :''\n            }\n            {currentMode === 'game-over' ?\n                <div className={styles.gameOverContainer}>\n                    <div className={styles.gameOver}>Game Over</div>\n                </div>\n                :''\n            }\n            {currentMode === 'game-won' ?\n                <div className={styles.gameOverContainer}>\n                    <div className={styles.gameOver}>Victory!!<br/>You finished the game!</div>\n                    <div className={styles.startGameButtonContainer}>\n                        <span className={styles.startGameButton}\n                              onClick={()=> {\n                                  setContents({open: true, title: 'Please be my Valentine forever!!!', text: Reward, openerId: '', action: 'video'});\n                              }}\n                        >\n                            Open Reward\n                        </span>\n                    </div>\n                </div>\n                :''\n            }\n        </main>\n        <footer>\n        </footer>\n    </>\n  );\n}\nconst mapStateToProps = (state) => ({mode:state.gameStatus.mode})\nconst mapDispatch = {onGameEnd, setContents}\nexport default connect(mapStateToProps, mapDispatch)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport characterReducer from '../tile-view/slices/characterSlice';\nimport npcReducer from '../tile-view/slices/npcSlice';\nimport objectReducer from '../tile-view/slices/objectSlice';\nimport mapImagesReducer from '../tile-view/slices/mapImagesSlice';\nimport statusReducer from '../tile-view/slices/statusSlice';\nimport dialogReducer from '../game-ui/slices/dialogSlice'\n\nexport default combineReducers({\n    mapImagesLoaded: mapImagesReducer,\n    gameStatus: statusReducer,\n    character: characterReducer,\n    npc: npcReducer,\n    objectNPC: objectReducer,\n    dialog: dialogReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit'\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './reducers'\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}